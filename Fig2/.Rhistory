panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 6),
legend.position = 'bottom') +
ylab("Minor Allele Frequency")
pdf("Fig5.pdf", width = 3, height = 4)
p
dev.off()
p <- ggplot(haus, aes(x = position, y = knownEM, col = host)) +
geom_point(alpha = 0.4, size = 0.2) +
facet_grid(chromo~pop) +
scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 6),
legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust = 1)) +
ylab("Minor Allele Frequency")
p
p <- ggplot(haus, aes(x = position, y = knownEM, col = host)) +
geom_point(alpha = 0.4, size = 0.2) +
facet_grid(chromo~pop) +
scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 6),
legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust = 0.5)) +
ylab("Minor Allele Frequency")
p
p <- ggplot(haus, aes(x = position, y = knownEM, col = host)) +
geom_point(alpha = 0.4, size = 0.2) +
facet_grid(chromo~pop) +
scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 6),
legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust = -1)) +
ylab("Minor Allele Frequency")
p
p <- ggplot(haus, aes(x = position, y = knownEM, col = host)) +
geom_point(alpha = 0.4, size = 0.2) +
facet_grid(chromo~pop) +
scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 6),
legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust = 1.5)) +
ylab("Minor Allele Frequency")
p
p <- ggplot(haus, aes(x = position, y = knownEM, col = host)) +
geom_point(alpha = 0.4, size = 0.2) +
facet_grid(chromo~pop) +
scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 6),
legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
p
p <- ggplot(haus, aes(x = position, y = knownEM, col = host)) +
geom_point(alpha = 0.4, size = 0.2) +
facet_grid(chromo~pop) +
scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
theme_classic() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 6),
legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
p
p <- ggplot(haus, aes(x = position, y = knownEM, col = host)) +
geom_point(alpha = 0.4, size = 0.2) +
facet_grid(chromo~pop) +
scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 5),
legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
pdf("Fig5.pdf", width = 3, height = 4)
p
dev.off()
pdf("Fig5.pdf", width = 3, height = 4.5)
p
dev.off()
haus_names <- c(
"StHeBC4_h_c11261_g0_i1" = "chemocyanin precursor",
"StHeBC4_p_c12587_g2_i1" = "SGT1",
"StHeBC4_u_c12903_g27039_i4" = "pectin methylesterase")
p <- ggplot(haus, aes(x = position, y = knownEM, col = host)) +
geom_point(alpha = 0.4, size = 0.2) +
facet_grid(chromo~pop, labeller = labeller(chromo = haus_names)) +
scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 5),
legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
p <- ggplot(haus, aes(x = position, y = knownEM, col = host)) +
geom_point(alpha = 0.4, size = 0.2) +
facet_grid(chromo~pop, labeller = labeller(chromo = haus_names)) +
scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 6),
legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
pdf("Fig5.pdf", width = 3, height = 4.5)
p
dev.off()
haus_names <- c(
"StHeBC4_h_c11261_g0_i1" = "chemocyanin\nprecursor",
"StHeBC4_p_c12587_g2_i1" = "SGT1",
"StHeBC4_u_c12903_g27039_i4" = "pectin\nmethylesterase")
p <- ggplot(haus, aes(x = position, y = knownEM, col = host)) +
geom_point(alpha = 0.4, size = 0.2) +
facet_grid(chromo~pop, labeller = labeller(chromo = haus_names)) +
scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 6),
legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
pdf("Fig5.pdf", width = 3, height = 4.5)
p
dev.off()
p <- ggplot(haus, aes(x = position, y = knownEM, col = host)) +
geom_point(alpha = 0.4, size = 0.2) +
facet_grid(chromo~pop, labeller = labeller(chromo = haus_names)) +
scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 7),
legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
pdf("Fig5.pdf", width = 3, height = 4.5)
p
dev.off()
subset(haus, chromo = "StHeBC4_p_c12587_g2_i1")
subset(haus, chromo == "StHeBC4_p_c12587_g2_i1")
subset(haus, chromo == "StHeBC4_p_c12587_g2_i1" && position > 300)
subset(haus, chromo == ("StHeBC4_p_c12587_g2_i1") && (position > 300))
haus$position <- as.numeric(haus.position)
haus$position <- as.numeric(haus$position)
subset(haus, chromo == ("StHeBC4_p_c12587_g2_i1") && (position > 300))
subset(haus, chromo == ("StHeBC4_p_c12587_g2_i1") && (position > 2500))
subset(haus, (chromo == "StHeBC4_p_c12587_g2_i1") && (position > 2500))
subset(haus, (chromo == "StHeBC4_p_c12587_g2_i1") & (position > 2500))
subset(haus, (chromo == "StHeBC4_p_c12587_g2_i1") & (position > 250))
subset(haus, (chromo == "StHeBC4_p_c12587_g2_i1") & (position > 250) & host == "sorghum")
subset(haus, (chromo == "StHeBC4_p_c12587_g2_i1") & (position > 250) & host == "maize")
subset(haus, (chromo == "StHeBC4_p_c12587_g2_i1") & (position > 250) & host == "sorghum")
subset(haus, (chromo == "StHeBC4_p_c12587_g2_i1") & (position > 250) & host == "sorghum") %>% tail()
subset(haus, (chromo == "StHeBC4_p_c12587_g2_i1") & (position > 250) & host == "maize") %>% tail()
df_h <- getAF(hs, hm)
df_h$pop <- 'Homa Bay'
df_k <- getAF(kf, km)
df_k$pop <- 'Kisii'
df <- rbind.data.frame(df_k, df_h)
pm <- subset(df, chromo == "StHeBC4_u_c12903_g27039_i4")
p2 <-  ggplot(pm, aes(x = position, y = AF, col = pop)) +
geom_point(size = 0.1, alpha = 0.5) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) +
scale_colour_discrete(name = "Population") +
ylab("Allele Frequency Difference")
p2
pdf('FigS3_pm.pdf', width = 4, height = 2)
p2
dev.off()
subset(pm, AF >0.5)
pm <- subset(df, (chromo == "StHeBC4_u_c12903_g27039_i4") & position == 713))
subset(df, (chromo == "StHeBC4_u_c12903_g27039_i4") & position == 713))
subset(df, (chromo == "StHeBC4_u_c12903_g27039_i4") & position == 713)
p2 <-  ggplot(pm, aes(x = position, y = AF, col = pop)) +
geom_point(size = 0.1, alpha = 0.5) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) +
scale_colour_discrete(name = "Population") +
ylab("Allele Frequency\nDifference")
p2
pdf('FigS3_pm.pdf', width = 4, height = 2)
p2
dev.off()
df <- rbind.data.frame(hm, hs, km, kf)
haus <- subset(df, chromo == "StHeBC4_h_c11261_g0_i1" |
chromo == "StHeBC4_p_c12587_g2_i1")
haus_names <- c(
"StHeBC4_h_c11261_g0_i1" = "chemocyanin\nprecursor",
"StHeBC4_p_c12587_g2_i1" = "SGT1")
p <- ggplot(haus, aes(x = position, y = knownEM, col = host)) +
geom_point(alpha = 0.4, size = 0.2) +
facet_grid(chromo~pop, labeller = labeller(chromo = haus_names)) +
scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 7),
legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
pdf("Fig5.pdf", width = 3, height = 4.5)
p
dev.off()
pdf("Fig5.pdf", width = 3, height = 3.5)
p
dev.off()
### read in transcriptome summary files from PPGP
### downloaded from http://bigdata.bx.psu.edu/PPGP_II_data/StHeBC4/PPGPII/
library(tidyverse)
library(viridis)
### function to average replicates for a particular stage
averageTPM <- function(stage_idx) {
# load data for each of the three replicates
R1 <- read.table(paste0('StHe_',stages[stage_idx],'_R1.genes.results'), header = T)
R2 <- read.table(paste0('StHe_',stages[stage_idx],'_R2.genes.results'), header = T)
R3 <- read.table(paste0('StHe_',stages[stage_idx],'_R3.genes.results'), header = T)
# calculate avg TPM for stage
df <- cbind.data.frame(R1$gene_id, R1$transcript_id.s., R1$TPM, R2$TPM, R3$TPM)
df$avg <- 'NA'
for (i in 1:nrow(df)) {
df$avg[i] <- round(mean(c(df$`R1$TPM`[i],df$`R2$TPM`[i],df$`R3$TPM`[i])),2)
}
return(df$avg)
}
### create new df with average TPM for each stage
stages <- c('0','1','2','3','4','5','6_1','6_2')
R1 <- read.table(paste0('StHe_',stages[1],'_R1.genes.results'), header = T)
df <- dplyr::select(R1, c(gene_id, transcript_id.s.))
setwd('../PPGP/')
### create new df with average TPM for each stage
stages <- c('0','1','2','3','4','5','6_1','6_2')
R1 <- read.table(paste0('StHe_',stages[1],'_R1.genes.results'), header = T)
df <- dplyr::select(R1, c(gene_id, transcript_id.s.))
for (i in 1:length(stages)) {
df$new <- as.numeric(averageTPM(i))
colnames(df)[i + 2] <- paste0('Stage_',stages[i])
}
### plot the chemocyanin
df_sub <- subset(df, (gene_id == "StHeBC4_c11261_g0" | gene_id =="StHeBC4_c12587_g2"))
head(df_sub)
df_sub(pivot_longer(cols=3:10))
%>%
### plot the chemocyanin
df_sub <- subset(df, (gene_id == "StHeBC4_c11261_g0" | gene_id =="StHeBC4_c12587_g2")) %>%
pivot_longer(cols = 3:10)
df_sub
ggplot(df_sub, aes(x = "name", y = "value"))
ggplot(df_sub, aes(x = "name", y = "value")) +
geom_point() +
facet_grid(.~chromo)
ggplot(df_sub, aes(x = "name", y = "value")) +
geom_point() +
facet_grid(.~gene_id)
ggplot(df_sub, aes(x = name, y = value)) +
geom_point() +
facet_grid(.~gene_id)
ggplot(df_sub, aes(x = name, y = log(value))) +
geom_point() +
facet_grid(.~gene_id)
ggplot(df_sub, aes(x = name, y = gene_id, fill = value)) +
geom_tile()
ggplot(df_sub, aes(x = name, y = gene_id, fill = log(value))) +
geom_tile()
ggplot(df_sub, aes(x = name, y = gene_id, fill = log(value))) +
geom_tile()
ggplot(df_sub, aes(x = name, y = gene_id, fill = log(value))) +
geom_line()
### plot the chemocyanin
df_sub <- subset(df, (gene_id == "StHeBC4_c11261_g0") %>%
)
### plot the chemocyanin
df_sub <- subset(df, (gene_id == "StHeBC4_c11261_g0") %>%
pivot_longer(cols = 3:10))
ggplot(df_sub, aes(x = name, y = gene_id, fill = log(value))) +
geom_line()
### plot the chemocyanin
df_sub <- subset(df, (gene_id == "StHeBC4_c11261_g0")) %>%
pivot_longer(cols = 3:10)
ggplot(df_sub, aes(x = name, y = gene_id, fill = log(value))) +
geom_line()
ggplot(df_sub, aes(x = name, y = value)) +
geom_line()
head(df_sub)
ggplot(df_sub, aes(x = name, y = value, group = gene_id)) +
geom_line() _
ggplot(df_sub, aes(x = name, y = value, group = gene_id)) +
geom_line() +
geom_point()
ggplot(df_sub, aes(x = name, y = value, group = gene_id)) +
geom_line() +
geom_point() +
ylab("TPM") +
xlab("Stage")
ggplot(df_sub, aes(x = name, y = value, group = gene_id)) +
geom_line() +
geom_point() +
ylab("TPM") +
xlab("Stage") +
theme_minimal()
ggplot(df_sub, aes(x = name, y = value, group = gene_id)) +
geom_line() +
geom_point() +
ylab("TPM") +
xlab("Stage") +
theme_classic()
ggplot(df_sub, aes(x = name, y = value, group = gene_id)) +
geom_line() +
geom_point() +
ylab("TPM") +
xlab("Stage") +
theme_minimal()
ggplot(df_sub, aes(x = name, y = value, group = gene_id)) +
geom_line() +
geom_point() +
ylab("TPM") +
xlab("Stage") +
theme_bw()
ggplot(df_sub, aes(x = name, y = value, group = gene_id)) +
geom_line() +
geom_point() +
ylab("TPM") +
xlab("Stage") +
theme_linedraw()
ggplot(df_sub, aes(x = name, y = value, group = gene_id)) +
geom_line() +
geom_point() +
ylab("TPM") +
xlab("Stage") +
theme_grey()
ggplot(df_sub, aes(x = name, y = value, group = gene_id)) +
geom_line() +
geom_point() +
ylab("TPM") +
xlab("Stage") +
theme_void()
ggplot(df_sub, aes(x = name, y = value, group = gene_id)) +
geom_line() +
geom_point() +
ylab("TPM") +
xlab("Stage") +
theme_light_bg()
ggplot(df_sub, aes(x = name, y = value, group = gene_id)) +
geom_line() +
geom_point() +
ylab("TPM") +
xlab("Stage") +
theme_light_bg() +
scale_x_discrete(labels=c("Stage_0" = 1, "Stage_1" = "1",
"Stage_2" = "2", "Stage_3" = "3", "Stage_4" = "4", "Stage_5" = "5",
"Stage_6_1" = "6_1", "Stage_6_2" = "6_2"))
ggplot(df_sub, aes(x = name, y = value, group = gene_id)) +
geom_line() +
geom_point() +
ylab("TPM") +
xlab("Stage") +
theme_light_bg() +
scale_x_discrete(labels=c("Stage_0" = 0, "Stage_1" = "1",
"Stage_2" = "2", "Stage_3" = "3", "Stage_4" = "4", "Stage_5" = "5",
"Stage_6_1" = "6_1", "Stage_6_2" = "6_2"))
p <- ggplot(df_sub, aes(x = name, y = value, group = gene_id)) +
geom_line() +
geom_point() +
ylab("TPM") +
xlab("Stage") +
theme_light_bg() +
scale_x_discrete(labels=c("Stage_0" = 0, "Stage_1" = "1",
"Stage_2" = "2", "Stage_3" = "3", "Stage_4" = "4", "Stage_5" = "5",
"Stage_6_1" = "6_1", "Stage_6_2" = "6_2"))
pdf("cc_exp.pdf", width = 2.5, height = 1)
p1
p
dev.off()
pdf("cc_exp.pdf", width = 2.5, height = 1.25)
p
dev.off()
pdf("cc_exp.pdf", width = 2.7, height = 1.25)
p
dev.off()
p <- ggplot(df_sub, aes(x = name, y = value, group = gene_id)) +
geom_line() +
geom_point() +
ylab("TPM") +
xlab("Stage") +
theme_light_bg() +
scale_x_discrete(labels=c("Stage_0" = 0, "Stage_1" = "1",
"Stage_2" = "2", "Stage_3" = "3", "Stage_4" = "4", "Stage_5" = "5",
"Stage_6_1" = "6.1", "Stage_6_2" = "6.2"))
pdf("cc_exp.pdf", width = 2.7, height = 1.25)
p
dev.off()
pdf("cc_exp.pdf", width = 2.7, height = 1.3)
p
dev.off()
df_sub <- subset(df, (gene_id =="StHeBC4_c12587_g2")) %>%
pivot_longer(cols = 3:10)
p <- ggplot(df_sub, aes(x = name, y = value, group = gene_id)) +
geom_line() +
geom_point() +
ylab("TPM") +
xlab("Stage") +
theme_light_bg() +
scale_x_discrete(labels=c("Stage_0" = 0, "Stage_1" = "1",
"Stage_2" = "2", "Stage_3" = "3", "Stage_4" = "4", "Stage_5" = "5",
"Stage_6_1" = "6.1", "Stage_6_2" = "6.2"))
pdf("pm_exp.pdf", width = 2.7, height = 1.3)
p
dev.off()
df
df_sub
#setwd("/Users/ebellis/Documents/GitHub/StrigaWGS/")
library(tidyverse)
library(ape)
library(jcolors)
k31 <- read.table("k31.mash.out", header=F)
k31 <- k31 %>% select(1:3)
colnames(k31) <- c("S1","S2","dist")
setwd('~/Documents/GitHub/StrigaWGS/Fig2/')
#setwd("/Users/ebellis/Documents/GitHub/StrigaWGS/")
library(tidyverse)
library(ape)
library(jcolors)
k31 <- read.table("k31.mash.out", header=F)
k31 <- k31 %>% select(1:3)
colnames(k31) <- c("S1","S2","dist")
meta <- read.csv('../Fig1/Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% filter(SampleID %in% unique(k31$S1))
runPCoA <- function(part, meta) {
# filter metadata
if(part == "A") {
meta_sub <- meta
} else if (part == "B") {
meta_sub <- filter(meta, Site != "Kisii") %>%
filter(Site != "Homa Bay")
meta_subkh <- filter(meta,
SampleID =="SH130"| SampleID =="SH134"|
SampleID =="SH138"| SampleID =="SH139"|
SampleID =="SH146"| SampleID =="SH124"|
SampleID =="SH117"| SampleID =="SH113"|
SampleID =="SH111"|SampleID =="SH104")
meta_sub <- rbind(meta_sub, meta_subkh)
} else if (part == "C") {
meta_sub <- filter(meta, Site == "Kisii")
} else if (part == "D") {
meta_sub <- filter(meta, Site == "Homa Bay")
}
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
# create df of results
df <- cbind.data.frame("SampleID"=rownames(k31.pcoa$vectors),
"Axis1"=k31.pcoa$vectors[,1],
"Axis2"=k31.pcoa$vectors[,2])
# add metadata
#meta <- read.csv('Striga_GPS.csv', header=T)
#meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
tmp <- meta %>% select(SampleID, Site, Host)
df <- inner_join(tmp, df)
return(df)
}
# loop through each figure part to create final df
FigParts = c("A","B","C","D")
for (i in 1:4){
df <- runPCoA(FigParts[i], meta)
df$part <- FigParts[i]
if(i > 1){
df <- rbind.data.frame(df_old, df)
df_old <- df
} else {
df_old <- df
}
}
df$Site <- as.factor(df$Site)
df$Host <- as.factor(df$Host)
head(df)
p <- ggplot(df, aes(x=Axis1, y=Axis2, col=Site, pch=Host)) +
geom_point(alpha = 0.6, size = 2.5) +
theme_classic() +
scale_colour_manual(values=paste0(jcolors(palette="pal5"))) +
facet_wrap(.~part)
p
subset(df, part == "C") %>% filter(Axis 1 >0)
subset(df, part == "C") %>% filter(Axis1 >0)
