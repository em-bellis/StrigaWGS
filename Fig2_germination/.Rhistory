tm_layout(legend.outside = T)
gea
tmap_save(tm = gea, filename = "gea.pdf", width = 3, height = 1.5, units = "in")
pm <- tm_shape(panama_smooth) +
tm_borders(lwd = 0.2) +
tm_shape(pts_ks_clean) +
tm_symbols(col = 'allele', size = 0.03, border.lwd = 0.2, palette = c('red','darkturquoise')) +
tm_layout(legend.outside = T)
pm
tmap_save(tm = pm, filename = "panama.pdf", width = 1.5, height = 1, units = "in")
samples <- c(rep('T',0.15*nrow(pts_ks_clean)), rep('A',0.8*nrow(pts_ks_clean)))
samples <- c(rep('T',0.2*nrow(pts_ks_clean)), rep('A',0.8*nrow(pts_ks_clean)))
for (i in 1:nrow(pts_ks_clean)) {
pts_ks_clean$allele[i] <- sample(samples, 1)
}
coordinates(pts_ks_clean) <- ~Lon + Lat
pm <- tm_shape(panama_smooth) +
tm_borders(lwd = 0.2) +
tm_shape(pts_ks_clean) +
tm_symbols(col = 'allele', size = 0.03, border.lwd = 0.2, palette = c('red','darkturquoise')) +
tm_layout(legend.outside = T)
pm
tmap_save(tm = pm, filename = "panama.pdf", width = 1.5, height = 1, units = "in")
library(xgboost)
?xgboost
knitr::opts_chunk$set(echo = TRUE)
arlu <- raster('~/Downloads/LULC_SUMMER_CAST2004/LULC_SUMMER_CAST2004.tif)
arlu <- raster('~/Downloads/LULC_SUMMER_CAST2004/LULC_SUMMER_CAST2004.tif')
arlu <- raster('~/Downloads/LULC_SUMMER_CAST2004/LULC_SUMMER_CAST2004.tif')
unload()
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
ls()
knitr::opts_chunk$set(echo = TRUE)
library(raster)
arlu <- raster('~/Downloads/LULC_SUMMER_CAST2004/LULC_SUMMER_CAST2004.tif')
plot(arlu)
arlu
arlu$values
hist(arlu)
library(raster)
ar_land_use <- raster('') #edit this line to point to place where raster is stored
plot(ar_land_use)
# edit this line to point to place where raster in GEOTiff file format is stored
ar_land_use <- raster('~/Downloads/LULC_SUMMER_CAST2004/LULC_SUMMER_CAST2004.tif')
# plot the raster
plot(ar_land_use)
plot(ar_land_use)
ar_land_use
print(ar_land_use)
attr("ar_land_use", info)
attr(ar_land_use, "info")
# raster manipulation example
ar_rice <- calc(ar_land_use, fun=function(x){ x[x != 201] <- NA; return(x)} ) # set all pixels where rice is not grown to 'NA'
plot(ar_rice)
ar_rice
ar_rice <- calc(ar_land_use, fun=function(x){ x[x != 202] <- NA; return(x)} )
ar_rice
plot(ar_rice)
library(spData)
load(us_states)
data(us_states)
us_states
str(us_states)
type(us_states)
summary(us_states)
class(us_states)
plot(us_states)
?st_transform
library(sf)
?st_transform
st_transform(us_states, ar_rice)
st_transform(us_states, crs(ar_rice))
us_states_utm <- st_transform(us_states, crs(ar_rice))
plot(us_states_utm)
class(us_states)
str(us_states)
str(us_states_utm)
crs(us_states_utm)
crs(us_states)
crs(us_states_utm)
crs(ar_rice)
knitr::opts_chunk$set(echo = TRUE)
#setwd("/Users/ebellis/Documents/GitHub/StrigaWGS/")
library(tidyverse)
library(jcolors)
k21 <- read.table("k21.mash.out", header=F)
k21 <- k21 %>% select(1:3)
colnames(k21) <- c("S1","S2","dist")
head(k21)
meta <- read.csv('Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% filter(SampleID %in% unique(k21$S1))
list5per <- filter(meta, Site != "Kisii") %>%
filter(Site != "Homa Bay")
list5perkh <- filter(meta, SampleID =="SH130" | SampleID =="SH134"|SampleID =="SH138"| SampleID =="SH139"|SampleID =="SH146"|SampleID =="SH124"|SampleID =="SH117"|SampleID =="SH113"|SampleID =="SH111"|SampleID =="SH104")
list5per <- rbind(list5per, list5perkh)
k21_flt <- k21 %>% filter(S1 %in% list5per$SampleID) %>%
filter(S2 %in% list5per$SampleID)
k21_flt <- as.matrix(k21_flt %>%
pivot_wider(names_from = S2, values_from = dist) %>%
column_to_rownames(var="S1")
)
library(ape)
k21.dist <- as.dist(k21_flt)
k21.pcoa <- ape::pcoa(k21.dist, correction="none", rn=NULL)
tmp <- cbind.data.frame("Axis"=1:29,"Cum_br_stick"= k21.pcoa$values$Cumul_br_stick, "Broken_stick"=k21.pcoa$values$Broken_stick)
ggplot(tmp, aes(x=Axis, y=Cum_br_stick)) + geom_line() + geom_point()
tmp2 <- cbind.data.frame("SampleID"=rownames(k21.pcoa$vectors), "Axis1"=k21.pcoa$vectors[,1], "Axis2"=k21.pcoa$vectors[,2])
# get metadata for samples
meta <- read.csv('Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% select(SampleID, Site, Host)
tmp2 <- inner_join(meta, tmp2)
p <- ggplot(tmp2, aes(x=Axis1, y=Axis2, col=Site, pch=Host)) +
geom_point(size=2.5, alpha=0.7) +
theme_classic() +
xlab(paste0("Axis1(",round(tmp$Broken_stick[1],3)*100,"%)")) +
ylab(paste0("Axis2(",round(tmp$Broken_stick[2],3)*100,"%)")) +
scale_color_manual(values=c("#628395","#C5D86D","#DB2763","#17377A","#FC471E","#55DDE0")) +
theme(legend.position="None")
p
knitr::opts_chunk$set(echo = TRUE)
#setwd("/Users/ebellis/Documents/GitHub/StrigaWGS/")
library(tidyverse)
k21 <- read.table("k21.mash.out", header=F)
k21 <- k21 %>% select(1:3)
colnames(k21) <- c("S1","S2","dist")
meta <- read.csv('Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% filter(SampleID %in% unique(k21$S1))
list5per <- filter(meta, Site == "Kisii"| Site == "Homa Bay")
k21_flt <- k21 %>% filter(S1 %in% list5per$SampleID) %>%
filter(S2 %in% list5per$SampleID)
k21_flt <- as.matrix(k21_flt %>%
pivot_wider(names_from = S2, values_from = dist) %>%
column_to_rownames(var="S1")
)
library(ape)
k21.dist <- as.dist(k21_flt)
k21.pcoa <- ape::pcoa(k21.dist, correction="none", rn=NULL)
tmp <- cbind.data.frame("Axis"=1:48,"Cum_br_stick"= k21.pcoa$values$Cumul_br_stick, "Broken_stick"=k21.pcoa$values$Broken_stick)
ggplot(tmp, aes(x=Axis, y=Cum_br_stick)) + geom_line() + geom_point()
tmp2 <- cbind.data.frame("SampleID"=rownames(k21.pcoa$vectors), "Axis1"=k21.pcoa$vectors[,1], "Axis2"=k21.pcoa$vectors[,2])
# get metadata for samples
meta <- read.csv('Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% select(SampleID, Site, Host)
tmp2 <- inner_join(meta, tmp2)
p <- ggplot(tmp2, aes(x=Axis1, y=Axis2, col=Site, pch=Host)) +
geom_point(size=2.5, alpha=0.7) +
theme_classic() +
xlab(paste0("Axis1(",round(tmp$Broken_stick[1],3)*100,"%)")) +
ylab(paste0("Axis2(",round(tmp$Broken_stick[2],3)*100,"%)")) +
scale_color_manual(values=c("#C5D86D","#17377A"))
pdf(file="Fig1_C.pdf",width=3,height=3)
p + theme(legend.position = "none")
dev.off()
p <- ggplot(tmp2, aes(x=Axis1, y=Axis2, col=Site, pch=Host)) +
geom_point(size=2.5, alpha=0.7) +
theme_classic() +
xlab(paste0("Axis1(",round(tmp$Broken_stick[1],3)*100,"%)")) +
ylab(paste0("Axis2(",round(tmp$Broken_stick[2],3)*100,"%)")) +
scale_color_manual(values=c("#C5D86D","#17377A"))
list5per <- filter(meta, Site == "Kisii")
list5per <- filter(meta, Site == "Kisii")
k21_flt <- k21 %>% filter(S1 %in% list5per$SampleID) %>%
filter(S2 %in% list5per$SampleID)
k21_flt <- as.matrix(k21_flt %>%
pivot_wider(names_from = S2, values_from = dist) %>%
column_to_rownames(var="S1")
)
k21.dist <- as.dist(k21_flt)
k21.pcoa <- ape::pcoa(k21.dist, correction="none", rn=NULL)
tmp <- cbind.data.frame("Axis"=1:48,"Cum_br_stick"= k21.pcoa$values$Cumul_br_stick, "Broken_stick"=k21.pcoa$values$Broken_stick)
ggplot(tmp, aes(x=Axis, y=Cum_br_stick)) + geom_line() + geom_point()
tmp <- cbind.data.frame("Axis"=1:24,"Cum_br_stick"= k21.pcoa$values$Cumul_br_stick, "Broken_stick"=k21.pcoa$values$Broken_stick)
knitr::opts_chunk$set(echo = TRUE)
#setwd("/Users/ebellis/Documents/GitHub/StrigaWGS/")
library(tidyverse)
k21 <- read.table("k21.mash.out", header=F)
k21 <- k21 %>% select(1:3)
colnames(k21) <- c("S1","S2","dist")
meta <- read.csv('Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% filter(SampleID %in% unique(k21$S1))
list5per <- filter(meta, Site == "Kisii")
#list5per <- filter(meta, Site == "Homa Bay")
k21_flt <- k21 %>% filter(S1 %in% list5per$SampleID) %>%
filter(S2 %in% list5per$SampleID)
k21_flt <- as.matrix(k21_flt %>%
pivot_wider(names_from = S2, values_from = dist) %>%
column_to_rownames(var="S1")
)
nrow(k21_flt)
k21.dist <- as.dist(k21_flt)
k21.pcoa <- ape::pcoa(k21.dist, correction="none", rn=NULL)
tmp <- cbind.data.frame("Axis"=1:24,"Cum_br_stick"= k21.pcoa$values$Cumul_br_stick, "Broken_stick"=k21.pcoa$values$Broken_stick)
k21.pcoa$values
tmp <- cbind.data.frame("Axis"=1:23,"Cum_br_stick"= k21.pcoa$values$Cumul_br_stick, "Broken_stick"=k21.pcoa$values$Broken_stick)
ggplot(tmp, aes(x=Axis, y=Cum_br_stick)) + geom_line() + geom_point()
tmp2 <- cbind.data.frame("SampleID"=rownames(k21.pcoa$vectors), "Axis1"=k21.pcoa$vectors[,1], "Axis2"=k21.pcoa$vectors[,2])
# get metadata for samples
meta <- read.csv('Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% select(SampleID, Site, Host)
tmp2 <- inner_join(meta, tmp2)
p <- ggplot(tmp2, aes(x=Axis1, y=Axis2, col=Site, pch=Host)) +
geom_point(size=2.5, alpha=0.7) +
theme_classic() +
xlab(paste0("Axis1(",round(tmp$Broken_stick[1],3)*100,"%)")) +
ylab(paste0("Axis2(",round(tmp$Broken_stick[2],3)*100,"%)")) +
scale_color_manual(values=c("#C5D86D","#17377A"))
p
p <- ggplot(tmp2, aes(x=Axis1, y=Axis2, col=Host, pch=Host)) +
geom_point(size=2.5, alpha=0.7) +
theme_classic() +
xlab(paste0("Axis1(",round(tmp$Broken_stick[1],3)*100,"%)")) +
ylab(paste0("Axis2(",round(tmp$Broken_stick[2],3)*100,"%)")) +
scale_color_manual(values=c("#C5D86D","#17377A"))
p
pdf(file="Fig1_C_Kisii.pdf",width=3,height=3)
p + theme(legend.position = "none")
dev.off()
#list5per <- filter(meta, Site == "Kisii")
list5per <- filter(meta, Site == "Homa Bay")
k21_flt <- k21 %>% filter(S1 %in% list5per$SampleID) %>%
filter(S2 %in% list5per$SampleID)
k21_flt <- as.matrix(k21_flt %>%
pivot_wider(names_from = S2, values_from = dist) %>%
column_to_rownames(var="S1")
)
library(ape)
k21.dist <- as.dist(k21_flt)
k21.pcoa <- ape::pcoa(k21.dist, correction="none", rn=NULL)
tmp <- cbind.data.frame("Axis"=1:23,"Cum_br_stick"= k21.pcoa$values$Cumul_br_stick, "Broken_stick"=k21.pcoa$values$Broken_stick)
ggplot(tmp, aes(x=Axis, y=Cum_br_stick)) + geom_line() + geom_point()
tmp2 <- cbind.data.frame("SampleID"=rownames(k21.pcoa$vectors), "Axis1"=k21.pcoa$vectors[,1], "Axis2"=k21.pcoa$vectors[,2])
# get metadata for samples
meta <- read.csv('Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% select(SampleID, Site, Host)
tmp2 <- inner_join(meta, tmp2)
p <- ggplot(tmp2, aes(x=Axis1, y=Axis2, col=Host, pch=Host)) +
geom_point(size=2.5, alpha=0.7) +
theme_classic() +
xlab(paste0("Axis1(",round(tmp$Broken_stick[1],3)*100,"%)")) +
ylab(paste0("Axis2(",round(tmp$Broken_stick[2],3)*100,"%)")) +
scale_color_manual(values=c("#C5D86D","#17377A"))
p
pdf(file="Fig1_C_HomaBay.pdf",width=3,height=3)
p + theme(legend.position = "none")
dev.off()
pdf(file="Fig1_C_HomaBay.pdf",width=3,height=3)
p
dev.off()
dev.off()
pdf(file="Fig1_C_HomaBay.pdf",width=3,height=3)
p
dev.off()
library(ape)
k21.dist <- as.dist(k21_flt)
k21.pcoa <- ape::pcoa(k21.dist, correction="none", rn=NULL)
tmp <- cbind.data.frame("Axis"=1:23,"Cum_br_stick"= k21.pcoa$values$Cumul_br_stick, "Broken_stick"=k21.pcoa$values$Broken_stick)
ggplot(tmp, aes(x=Axis, y=Cum_br_stick)) + geom_line() + geom_point()
tmp2 <- cbind.data.frame("SampleID"=rownames(k21.pcoa$vectors), "Axis1"=k21.pcoa$vectors[,1], "Axis2"=k21.pcoa$vectors[,2])
# get metadata for samples
meta <- read.csv('Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% select(SampleID, Site, Host)
tmp2 <- inner_join(meta, tmp2)
p <- ggplot(tmp2, aes(x=Axis1, y=Axis2, col=Host, pch=Host)) +
geom_point(size=2.5, alpha=0.7) +
theme_classic() +
xlab(paste0("Axis1(",round(tmp$Broken_stick[1],3)*100,"%)")) +
ylab(paste0("Axis2(",round(tmp$Broken_stick[2],3)*100,"%)")) +
scale_color_manual(values=c("#C5D86D","#17377A"))
pdf(file="Fig1_C_HomaBay.pdf",width=3,height=3)
p
dev.off()
library(ape)
k21.dist <- as.dist(k21_flt)
k21.pcoa <- ape::pcoa(k21.dist, correction="none", rn=NULL)
tmp <- cbind.data.frame("Axis"=1:23,"Cum_br_stick"= k21.pcoa$values$Cumul_br_stick, "Broken_stick"=k21.pcoa$values$Broken_stick)
ggplot(tmp, aes(x=Axis, y=Cum_br_stick)) + geom_line() + geom_point()
tmp2 <- cbind.data.frame("SampleID"=rownames(k21.pcoa$vectors), "Axis1"=k21.pcoa$vectors[,1], "Axis2"=k21.pcoa$vectors[,2])
# get metadata for samples
meta <- read.csv('Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% select(SampleID, Site, Host)
tmp2 <- inner_join(meta, tmp2)
p <- ggplot(tmp2, aes(x=Axis1, y=Axis2, col=Host, pch=Host)) +
geom_point(size=2.5, alpha=0.7) +
theme_classic() +
xlab(paste0("Axis1(",round(tmp$Broken_stick[1],3)*100,"%)")) +
ylab(paste0("Axis2(",round(tmp$Broken_stick[2],3)*100,"%)")) +
scale_color_manual(values=c("#C5D86D","#17377A"))
pdf(file="Fig1_C_HomaBay.pdf",width=3,height=3)
p
dev.off()
knitr::opts_chunk$set(echo = TRUE)
#setwd("/Users/ebellis/Documents/GitHub/StrigaWGS/")
library(tidyverse)
k21 <- read.table("k21.mash.out", header=F)
k21 <- k21 %>% select(1:3)
colnames(k21) <- c("S1","S2","dist")
meta <- read.csv('Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% filter(SampleID %in% unique(k21$S1))
list5per <- filter(meta, Site == "Kisii")
#list5per <- filter(meta, Site == "Homa Bay")
k21_flt <- k21 %>% filter(S1 %in% list5per$SampleID) %>%
filter(S2 %in% list5per$SampleID)
k21_flt <- as.matrix(k21_flt %>%
pivot_wider(names_from = S2, values_from = dist) %>%
column_to_rownames(var="S1")
)
library(ape)
k21.dist <- as.dist(k21_flt)
k21.pcoa <- ape::pcoa(k21.dist, correction="none", rn=NULL)
tmp <- cbind.data.frame("Axis"=1:23,"Cum_br_stick"= k21.pcoa$values$Cumul_br_stick, "Broken_stick"=k21.pcoa$values$Broken_stick)
ggplot(tmp, aes(x=Axis, y=Cum_br_stick)) + geom_line() + geom_point()
tmp2 <- cbind.data.frame("SampleID"=rownames(k21.pcoa$vectors), "Axis1"=k21.pcoa$vectors[,1], "Axis2"=k21.pcoa$vectors[,2])
# get metadata for samples
meta <- read.csv('Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% select(SampleID, Site, Host)
tmp2 <- inner_join(meta, tmp2)
p <- ggplot(tmp2, aes(x=Axis1, y=Axis2, col=Host, pch=Host)) +
geom_point(size=2.5, alpha=0.7) +
theme_classic() +
xlab(paste0("Axis1(",round(tmp$Broken_stick[1],3)*100,"%)")) +
ylab(paste0("Axis2(",round(tmp$Broken_stick[2],3)*100,"%)")) +
scale_color_manual(values=c("#C5D86D","#17377A"))
pdf(file="Fig1_C_Kisii.pdf",width=3,height=3)
p
dev.off()
dev.off()
dev.off()
p
k21_flt
nrow(k21_flt)
#list5per <- filter(meta, Site == "Kisii")
list5per <- filter(meta, Site == "Homa Bay")
k21_flt <- k21 %>% filter(S1 %in% list5per$SampleID) %>%
filter(S2 %in% list5per$SampleID)
k21_flt
k21_flt <- as.matrix(k21_flt %>%
pivot_wider(names_from = S2, values_from = dist) %>%
column_to_rownames(var="S1")
)
library(ape)
k21.dist <- as.dist(k21_flt)
k21.pcoa <- ape::pcoa(k21.dist, correction="none", rn=NULL)
tmp <- cbind.data.frame("Axis"=1:23,"Cum_br_stick"= k21.pcoa$values$Cumul_br_stick, "Broken_stick"=k21.pcoa$values$Broken_stick)
ggplot(tmp, aes(x=Axis, y=Cum_br_stick)) + geom_line() + geom_point()
tmp2 <- cbind.data.frame("SampleID"=rownames(k21.pcoa$vectors), "Axis1"=k21.pcoa$vectors[,1], "Axis2"=k21.pcoa$vectors[,2])
# get metadata for samples
meta <- read.csv('Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% select(SampleID, Site, Host)
tmp2 <- inner_join(meta, tmp2)
p <- ggplot(tmp2, aes(x=Axis1, y=Axis2, col=Host, pch=Host)) +
geom_point(size=2.5, alpha=0.7) +
theme_classic() +
xlab(paste0("Axis1(",round(tmp$Broken_stick[1],3)*100,"%)")) +
ylab(paste0("Axis2(",round(tmp$Broken_stick[2],3)*100,"%)")) +
scale_color_manual(values=c("#C5D86D","#17377A"))
p
tmp
list5per <- filter(meta, Site == "Kisii")
k21_flt <- k21 %>% filter(S1 %in% list5per$SampleID) %>%
filter(S2 %in% list5per$SampleID)
k21_flt <- as.matrix(k21_flt %>%
pivot_wider(names_from = S2, values_from = dist) %>%
column_to_rownames(var="S1")
)
k21.dist <- as.dist(k21_flt)
k21.pcoa <- ape::pcoa(k21.dist, correction="none", rn=NULL)
tmp <- cbind.data.frame("Axis"=1:23,"Cum_br_stick"= k21.pcoa$values$Cumul_br_stick, "Broken_stick"=k21.pcoa$values$Broken_stick)
tmp
k21_Fltr
k21_flt
#list5per <- filter(meta, Site == "Kisii")
list5per <- filter(meta, Site == "Homa Bay")
k21_flt <- k21 %>% filter(S1 %in% list5per$SampleID) %>%
filter(S2 %in% list5per$SampleID)
k21_flt <- as.matrix(k21_flt %>%
pivot_wider(names_from = S2, values_from = dist) %>%
column_to_rownames(var="S1")
)
k21_flt
k21.dist <- as.dist(k21_flt)
k21.dist
?pcoa
k21.pcoa <- ape::pcoa(k21.dist, correction="none", rn=NULL)
k21.pcoa
tmp <- cbind.data.frame("Axis"=1:23,"Cum_br_stick"= k21.pcoa$values$Cumul_br_stick, "Broken_stick"=k21.pcoa$values$Broken_stick)
ggplot(tmp, aes(x=Axis, y=Cum_br_stick)) + geom_line() + geom_point()
tmp2 <- cbind.data.frame("SampleID"=rownames(k21.pcoa$vectors), "Axis1"=k21.pcoa$vectors[,1], "Axis2"=k21.pcoa$vectors[,2])
tmp2
tmp2
tmp
tmp_old <- tmp
list5per <- filter(meta, Site == "Kisii")
k21_flt <- k21 %>% filter(S1 %in% list5per$SampleID) %>%
filter(S2 %in% list5per$SampleID)
k21_flt <- as.matrix(k21_flt %>%
pivot_wider(names_from = S2, values_from = dist) %>%
column_to_rownames(var="S1")
)
k21.dist <- as.dist(k21_flt)
k21.pcoa <- ape::pcoa(k21.dist, correction="none", rn=NULL)
tmp <- cbind.data.frame("Axis"=1:23,"Cum_br_stick"= k21.pcoa$values$Cumul_br_stick, "Broken_stick"=k21.pcoa$values$Broken_stick)
tmp
tmp_old
p
#install and load libraries
library(tidyverse)
library(reshape2)
library(jcolors)
####load and reformat data
ken <- read.csv('Tian_project6.25.19.csv', header=T)
ken$percent <- ken$Germinated/(ken$Germinated+ken$Ungerminated)*100 #make a column for percent germination
ken <- subset(ken, Germinated+Ungerminated > 10)
setwd('~/Documents/GitHub/StrigaWGS/Fig2_germination/')
####load and reformat data
ken <- read.csv('Tian_project6.25.19.csv', header=T)
ken$percent <- ken$Germinated/(ken$Germinated+ken$Ungerminated)*100 #make a column for percent germination
ken <- subset(ken, Germinated+Ungerminated > 10)
ken2 <- ken %>% group_by(Sample, Site, Host, Treatment) %>% summarize(germ=mean(percent, na.rm=TRUE), num=n()) #get averages for 3 replicates of each treatment/parasite genotype combination
ken2 <- as.data.frame(ken2) #change to dataframe from tibble format
ken.pos <- subset(ken2, Site == "Kisii" | Site=="HomaBay") #subset to remove positive and negative controls before plotting
df <- dcast(ken.pos, Sample + Site + Host ~ Treatment, value.var="germ") #reformat data frame for easier plotting
colnames(df)[4] <- "DS" #ggplot didn't like column names that start with numbers
df$Site <- droplevels(df)$Site #get rid of unused levels for nicer legend
df <- subset(df, Sample != "Sther143") #only one replicate for one of the treatments
df <- subset(df, Sample != "Sther139") #less than 10 seeds in all wells for one of the treatments
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point(size = 2.5, alpha = 0.8) +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(values = paste0(jcolors(palette="pal5"))[c(2,4)], labels = c("Homa Bay", "Kisii")) +
scale_shape_discrete(labels = c("finger millet", "maize", "sorghum"))
p1
# ken3
ken3 <- ken %>% group_by(Sample, Site, Host, Treatment)
ken3.pos <- subset(ken3, Site == "Kisii" | Site=="HomaBay") #subset to remove positive and negative controls before plotting
ken3.pos$Host <- as.factor(ken3.pos$Host)
ken3.pos$Treatment <- as.factor(ken3.pos$Treatment)
ken3.pos$Site <- as.factor(ken3.pos$Site)
# glmm with random effect of sample
library(lme4)
mod1 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Host + Treatment + (1|Sample),
data = ken3.pos,
family = 'binomial')
mod2 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Host  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.004
mod3 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment + Host  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.011
mod3b <- glmer(cbind(Germinated, Ungerminated) ~ Treatment * Host  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.011
anova(mod3, mod3b)
summary(mod3b)
mod4 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Treatment  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.24
anova(mod4, mod3b)
mod4b <- glmer(cbind(Germinated, Ungerminated) ~ Treatment * Host  + Site + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.011
anova(mod3b, mod4b)
mod4b <- glmer(cbind(Germinated, Ungerminated) ~ Treatment * Site:Host + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.011
ken3.k <- subset(ken3.pos, Site == "Kisii")
ken3.k
ken3.h <- subset(ken3.pos, Site == "Homa Bay")
ken3.h
ken3.h <- subset(ken3.pos, Site == "HomaBay")
ken3.h
###
mod1 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment * Host + (1|Sample),
data = ken3.k,
family = 'binomial') # p = 0.011
summary(mod1)
mod2 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment + Host + (1|Sample),
data = ken3.k,
family = 'binomial') # p = 0.011
anova(mod1,mod2)
exp(-0.025)
###
mod1 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment * Host + (1|Sample),
data = ken3.h,
family = 'binomial') # p = 0.011
mod2 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment + Host + (1|Sample),
data = ken3.h,
family = 'binomial') # p = 0.011
anova(mod1,mod2)
anova(mod1)
summary(mod1)
