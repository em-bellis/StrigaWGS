knitr::opts_chunk$set(echo = TRUE)
#setwd("/Users/ebellis/Documents/GitHub/StrigaWGS/")
library(tidyverse)
library(ape)
library(jcolors)
k31 <- read.table("k31.mash.out", header=F)
k31 <- k31 %>% select(1:3)
colnames(k31) <- c("S1","S2","dist")
meta <- read.csv('../Fig1/Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% filter(SampleID %in% unique(k31$S1))
# function to run PCoA and return clean df
runPCoA <- function(part, meta) {
# filter metadata
if(part == "A") {
meta_sub <- meta
} else if (part == "B") {
meta_sub <- filter(meta, Site != "Kisii") %>%
filter(Site != "Homa Bay")
meta_subkh <- filter(meta,
SampleID =="SH130"| SampleID =="SH134"|
SampleID =="SH138"| SampleID =="SH139"|
SampleID =="SH146"| SampleID =="SH124"|
SampleID =="SH117"| SampleID =="SH113"|
SampleID =="SH111"|SampleID =="SH104")
meta_sub <- rbind(meta_sub, meta_subkh)
} else if (part == "C") {
meta_sub <- filter(meta, Site == "Kisii")
} else if (part == "D") {
meta_sub <- filter(meta, Site == "Homa Bay")
}
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
# create df of results
df <- cbind.data.frame("SampleID"=rownames(k31.pcoa$vectors),
"Axis1"=k31.pcoa$vectors[,1],
"Axis2"=k31.pcoa$vectors[,2])
# add metadata
#meta <- read.csv('Striga_GPS.csv', header=T)
#meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
tmp <- meta %>% select(SampleID, Site, Host)
df <- inner_join(tmp, df)
return(df)
}
# loop through each figure part to create final df
FigParts = c("A","B","C","D")
for (i in 1:4){
df <- runPCoA(FigParts[i], meta)
df$part <- FigParts[i]
if(i > 1){
df <- rbind.data.frame(df_old, df)
df_old <- df
} else {
df_old <- df
}
}
df$Site <- as.factor(df$Site)
df$Host <- as.factor(df$Host)
p <- ggplot(df, aes(x=Axis1, y=Axis2, col=Site, pch=Host)) +
geom_point(alpha = 0.6, size = 2.5) +
theme_classic() +
scale_colour_manual(values=paste0(jcolors(palette="pal5"))) +
facet_wrap(.~part)
pdf(file="Fig2.pdf",width=3,height=3)
p
dev.off()
pdf(file="Fig2.pdf",width=5,height=5)
p
p
dev.off()
knitr::opts_chunk$set(echo = TRUE)
#setwd("/Users/ebellis/Documents/GitHub/StrigaWGS/")
library(tidyverse)
library(ape)
library(jcolors)
k31 <- read.table("k31.mash.out", header=F)
k31 <- k31 %>% select(1:3)
colnames(k31) <- c("S1","S2","dist")
meta <- read.csv('../Fig1/Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% filter(SampleID %in% unique(k31$S1))
# function to run PCoA and return clean df
runPCoA <- function(part, meta) {
# filter metadata
if(part == "A") {
meta_sub <- meta
} else if (part == "B") {
meta_sub <- filter(meta, Site != "Kisii") %>%
filter(Site != "Homa Bay")
meta_subkh <- filter(meta,
SampleID =="SH130"| SampleID =="SH134"|
SampleID =="SH138"| SampleID =="SH139"|
SampleID =="SH146"| SampleID =="SH124"|
SampleID =="SH117"| SampleID =="SH113"|
SampleID =="SH111"|SampleID =="SH104")
meta_sub <- rbind(meta_sub, meta_subkh)
} else if (part == "C") {
meta_sub <- filter(meta, Site == "Kisii")
} else if (part == "D") {
meta_sub <- filter(meta, Site == "Homa Bay")
}
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
# create df of results
df <- cbind.data.frame("SampleID"=rownames(k31.pcoa$vectors),
"Axis1"=k31.pcoa$vectors[,1],
"Axis2"=k31.pcoa$vectors[,2])
# add metadata
#meta <- read.csv('Striga_GPS.csv', header=T)
#meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
tmp <- meta %>% select(SampleID, Site, Host)
df <- inner_join(tmp, df)
return(df)
}
# loop through each figure part to create final df
FigParts = c("A","B","C","D")
for (i in 1:4){
df <- runPCoA(FigParts[i], meta)
df$part <- FigParts[i]
if(i > 1){
df <- rbind.data.frame(df_old, df)
df_old <- df
} else {
df_old <- df
}
}
df$Site <- as.factor(df$Site)
df$Host <- as.factor(df$Host)
p <- ggplot(df, aes(x=Axis1, y=Axis2, col=Site, pch=Host)) +
geom_point(alpha = 0.6, size = 2.5) +
theme_classic() +
scale_colour_manual(values=paste0(jcolors(palette="pal5"))) +
facet_wrap(.~part)
pdf(file="Fig2.pdf",width=5,height=5)
p
dev.off()
#install and load libraries
library(tidyverse)
library(reshape2)
####load and reformat data
ken <- read.csv('Tian_project6.25.19.csv', header=T)
pwd
getwd()
setwd('../Fig3')
getwd()
####load and reformat data
ken <- read.csv('Tian_project6.25.19.csv', header=T)
ken$percent <- ken$Germinated/(ken$Germinated+ken$Ungerminated)*100 #make a column for percent germination
ken <- subset(ken, Germinated+Ungerminated > 10)
ken2 <- ken %>% group_by(Sample, Site, Host, Treatment) %>% summarize(germ=mean(percent, na.rm=TRUE), num=n()) #get averages for 3 replicates of each treatment/parasite genotype combination
ken2 <- as.data.frame(ken2) ##change to dataframe from tibble format
ken.pos <- subset(ken2, Site == "Kisii" | Site=="HomaBay") #subset to remove positive and negative controls before plotting
df <- dcast(ken.pos, Sample + Site + Host ~ Treatment, value.var="germ") #reformat data frame for easier plotting
colnames(df)[4] <- "DS" #ggplot didn't like column names that start with numbers
df$Site <- droplevels(df)$Site #get rid of unused levels for nicer legend
df <- subset(df, Sample != "Sther143") #only one replicate for one of the treatments
df <- subset(df, Sample != "Sther139") #less than 10 seeds in all wells for one of the treatments
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) + geom_point()+ geom_abline(intercept = 0, slope=1, lty=2) + theme_classic() + xlab("Germination %, 5DS") + ylab("Germination %, ORO")
p1
p1
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point() +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() + xlab("Germination % \n(5DS)") + ylab("Germination %, ORO")
p1
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point() +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() + xlab("Germination % \n5DS") + ylab("Germination % \nORO")
p1
library(jcolors)
jcolors(palette="pal5")
paste0(jcolors(palette="pal5"))[1,4]
paste0(jcolors(palette="pal5"))
paste0(jcolors(palette="pal5"))[1]
paste0(jcolors(palette="pal5"))[c(1,4)]
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point() +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(paste0(jcolors(palette="pal5"))[c(1,4)])
p1
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point() +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(values = paste0(jcolors(palette="pal5"))[c(1,4)])
p1
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point() +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(values = paste0(jcolors(palette="pal5"))[c(2,4)])
p1
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point(size = 2.5, alpha = 0.7) +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(values = paste0(jcolors(palette="pal5"))[c(2,4)])
p1
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point(size = 2.5, alpha = 0.8) +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(values = paste0(jcolors(palette="pal5"))[c(2,4)])
p1
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point(size = 2.5, alpha = 0.8) +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(values = paste0(jcolors(palette="pal5"))[c(2,4)], labels = c("Homa Bay", "Kisii")) +
p1 #plot figure
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point(size = 2.5, alpha = 0.8) +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(values = paste0(jcolors(palette="pal5"))[c(2,4)], labels = c("Homa Bay", "Kisii")) +
p1 #plot figure
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point(size = 2.5, alpha = 0.8) +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(values = paste0(jcolors(palette="pal5"))[c(2,4)], labels = c("Homa Bay", "Kisii"))
p1
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point(size = 2.5, alpha = 0.8) +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(values = paste0(jcolors(palette="pal5"))[c(2,4)], labels = c("Homa Bay", "Kisii")) +
scale_shape_discrete(labels = c("finger millet", "maize", "sorghum"))
[1]
p1
pdf('Fig3.pdf', width = 3, height = 3)
p1 #plot figure
dev.off()
####load and reformat data
ken <- read.csv('Tian_project6.25.19.csv', header=T)
ken$percent <- ken$Germinated/(ken$Germinated+ken$Ungerminated)*100 #make a column for percent germination
ken <- subset(ken, Germinated+Ungerminated > 10)
ken2 <- ken %>% group_by(Sample, Site, Host, Treatment) %>% summarize(germ=mean(percent, na.rm=TRUE), num=n()) #get averages for 3 replicates of each treatment/parasite genotype combination
ken2 <- as.data.frame(ken2) #change to dataframe from tibble format
ken2
head(ken2)
head(df)
# ken3
ken3 <- ken %>% group_by(Sample, Site, Host, Treatment)
ken3
ken$percent
ken3$percent <- ken2 <- ken$percent
head(ken3)
ken3.pos <- subset(ken3, Site == "Kisii" | Site=="HomaBay") #subset to remove positive and negative controls before plotting
ken3.pos
?lme4
library(lme4)
install.packages('lme4')
head(ken3.pos)
?glmer
??glmer
glmer(cbind(Germinated, Ungerminated) ~ Site + Host + Treatment + 1|Sample,
data = ken3.pos,
family = 'binomial',)
# glmm with random effect of sample
library(lme4)
glmer(cbind(Germinated, Ungerminated) ~ Site + Host + Treatment + 1|Sample,
data = ken3.pos,
family = 'binomial',)
glmer(cbind(Germinated, Ungerminated) ~ Site + Host + Treatment + 1|Sample,
data = ken3.pos,
family = 'binomial')
mod1 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Host + Treatment + 1|Sample,
data = ken3.pos,
family = 'binomial')
summary(mod1)
anova(mod1)
summary(mod1, test = "Chisq")
mod2 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Host  + 1|Sample,
data = ken3.pos,
family = 'binomial')
anova(mod1, mod2)
anova(mod1, mod2, test = "Chisq")
mod3 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment + Host  + 1|Sample,
data = ken3.pos,
family = 'binomial')
anova(mod1, mod3)
anova(mod1, mod3, test = "Chisq")
?drop1
drop1(mod1)
drop1(mod1, test = "LRT")
drop1(mod1, test = "Chisq")
drop1(mod1, test = "Chisq")
mod1
?drop1
mod4 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Treatment  + 1|Sample,
data = ken3.pos,
family = 'binomial')
mod4 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Treatment  + 1|Sample,
data = ken3.pos,
family = 'binomial')
ken3.pos
ken3.pos$Host
class(ken3.pos$Host)
ken3.pos$Host <- as.factor(ken3.pos$Host)
ken3.pos$Treatment <- as.factor(ken3.pos$Treatment)
ken3.pos$Site <- as.factor(ken3.pos$Site)
mod1 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Host + Treatment + 1|Sample,
data = ken3.pos,
family = 'binomial')
mod2 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Host  + 1|Sample,
data = ken3.pos,
family = 'binomial')
mod3 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment + Host  + 1|Sample,
data = ken3.pos,
family = 'binomial')
mod4 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Treatment  + 1|Sample,
data = ken3.pos,
family = 'binomial')
anova(mod1, mod2)
anova(mod1, mod2, test = "Chisq")
anova(mod1, mod3, test = "Chisq")
anova(mod1, mod4, test = "Chisq")
anova(mod1, mod4, test = "Chisq")
summary(mod4)
####### keep treatment but not host
mod5 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment  + 1|Sample,
data = ken3.pos,
family = 'binomial') # p = 0.95
anova(mod4, mod5, test = "Chisq")
summary(mod5)
mod5
mod6 <- glmer(cbind(Germinated, Ungerminated) ~ 1 + 1|Sample,
data = ken3.pos,
family = 'binomial') # p = 0.46
anova(mod5, mod6)
anova(mod5, mod6, test= "Chisq")
summary(mod5)
anova(mod1)
mod1
summary(mod5)
####### keep treatment but not host
mod5 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.46
summary(mod5)
mod1 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Host + Treatment + (1|Sample),
data = ken3.pos,
family = 'binomial')
mod2 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Host  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p < 0.05
mod3 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment + Host  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.60
mod4 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Treatment  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.95
anova(mod1, mod2, test = "Chisq")
anova(mod1, mod3, test = "Chisq")
anova(mod1, mod4, test = "Chisq")
####### keep treatment and site but not host
mod5 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.46
anova(mod5, mod4, test = "Chisq")
mod6 <- glmer(cbind(Germinated, Ungerminated) ~ 1 + Host + (1|Sample),
data = ken3.pos,
family = 'binomial') # p < 0.01
mod6 <- glmer(cbind(Germinated, Ungerminated) ~ Host + (1|Sample),
data = ken3.pos,
family = 'binomial') # p < 0.01
anova(mod6, mod4, test = "Chisq")
mod6 <- glmer(cbind(Germinated, Ungerminated) ~ Host + (1|Sample),
data = ken3.pos,
family = 'binomial') # p < 0.01
anova(mod6, mod4, test = "Chisq")
anova(mod6, mod5, test = "Chisq")
mod4
anova(mod2, mod5, test = "Chisq")
anova(mod4, mod5, test = "Chisq")
mod6 <- glmer(cbind(Germinated, Ungerminated) ~ Site + (1|Sample),
data = ken3.pos,
family = 'binomial') # p < 0.01
anova(mod4, mod6, test = "Chisq")
summary(mod5)
summary(mod6)
summary(mod4)
plot(mod4)
qplot(mod4)
plot(mod4)
summary(mod4)
version()
version
anova(mod3, mod4, test = "Chisq")
anova(mod1, mod4, test = "Chisq")
mod1
mod4
summary(mod4)
summary(mod1)
