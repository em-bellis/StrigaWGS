facet_wrap(.~part)
pdf(file="Fig2.pdf",width=5,height=5)
p
dev.off()
#install and load libraries
library(tidyverse)
library(reshape2)
####load and reformat data
ken <- read.csv('Tian_project6.25.19.csv', header=T)
pwd
getwd()
setwd('../Fig3')
getwd()
####load and reformat data
ken <- read.csv('Tian_project6.25.19.csv', header=T)
ken$percent <- ken$Germinated/(ken$Germinated+ken$Ungerminated)*100 #make a column for percent germination
ken <- subset(ken, Germinated+Ungerminated > 10)
ken2 <- ken %>% group_by(Sample, Site, Host, Treatment) %>% summarize(germ=mean(percent, na.rm=TRUE), num=n()) #get averages for 3 replicates of each treatment/parasite genotype combination
ken2 <- as.data.frame(ken2) ##change to dataframe from tibble format
ken.pos <- subset(ken2, Site == "Kisii" | Site=="HomaBay") #subset to remove positive and negative controls before plotting
df <- dcast(ken.pos, Sample + Site + Host ~ Treatment, value.var="germ") #reformat data frame for easier plotting
colnames(df)[4] <- "DS" #ggplot didn't like column names that start with numbers
df$Site <- droplevels(df)$Site #get rid of unused levels for nicer legend
df <- subset(df, Sample != "Sther143") #only one replicate for one of the treatments
df <- subset(df, Sample != "Sther139") #less than 10 seeds in all wells for one of the treatments
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) + geom_point()+ geom_abline(intercept = 0, slope=1, lty=2) + theme_classic() + xlab("Germination %, 5DS") + ylab("Germination %, ORO")
p1
p1
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point() +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() + xlab("Germination % \n(5DS)") + ylab("Germination %, ORO")
p1
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point() +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() + xlab("Germination % \n5DS") + ylab("Germination % \nORO")
p1
library(jcolors)
jcolors(palette="pal5")
paste0(jcolors(palette="pal5"))[1,4]
paste0(jcolors(palette="pal5"))
paste0(jcolors(palette="pal5"))[1]
paste0(jcolors(palette="pal5"))[c(1,4)]
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point() +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(paste0(jcolors(palette="pal5"))[c(1,4)])
p1
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point() +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(values = paste0(jcolors(palette="pal5"))[c(1,4)])
p1
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point() +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(values = paste0(jcolors(palette="pal5"))[c(2,4)])
p1
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point(size = 2.5, alpha = 0.7) +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(values = paste0(jcolors(palette="pal5"))[c(2,4)])
p1
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point(size = 2.5, alpha = 0.8) +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(values = paste0(jcolors(palette="pal5"))[c(2,4)])
p1
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point(size = 2.5, alpha = 0.8) +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(values = paste0(jcolors(palette="pal5"))[c(2,4)], labels = c("Homa Bay", "Kisii")) +
p1 #plot figure
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point(size = 2.5, alpha = 0.8) +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(values = paste0(jcolors(palette="pal5"))[c(2,4)], labels = c("Homa Bay", "Kisii")) +
p1 #plot figure
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point(size = 2.5, alpha = 0.8) +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(values = paste0(jcolors(palette="pal5"))[c(2,4)], labels = c("Homa Bay", "Kisii"))
p1
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point(size = 2.5, alpha = 0.8) +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(values = paste0(jcolors(palette="pal5"))[c(2,4)], labels = c("Homa Bay", "Kisii")) +
scale_shape_discrete(labels = c("finger millet", "maize", "sorghum"))
[1]
p1
pdf('Fig3.pdf', width = 3, height = 3)
p1 #plot figure
dev.off()
####load and reformat data
ken <- read.csv('Tian_project6.25.19.csv', header=T)
ken$percent <- ken$Germinated/(ken$Germinated+ken$Ungerminated)*100 #make a column for percent germination
ken <- subset(ken, Germinated+Ungerminated > 10)
ken2 <- ken %>% group_by(Sample, Site, Host, Treatment) %>% summarize(germ=mean(percent, na.rm=TRUE), num=n()) #get averages for 3 replicates of each treatment/parasite genotype combination
ken2 <- as.data.frame(ken2) #change to dataframe from tibble format
ken2
head(ken2)
head(df)
# ken3
ken3 <- ken %>% group_by(Sample, Site, Host, Treatment)
ken3
ken$percent
ken3$percent <- ken2 <- ken$percent
head(ken3)
ken3.pos <- subset(ken3, Site == "Kisii" | Site=="HomaBay") #subset to remove positive and negative controls before plotting
ken3.pos
?lme4
library(lme4)
install.packages('lme4')
head(ken3.pos)
?glmer
??glmer
glmer(cbind(Germinated, Ungerminated) ~ Site + Host + Treatment + 1|Sample,
data = ken3.pos,
family = 'binomial',)
# glmm with random effect of sample
library(lme4)
glmer(cbind(Germinated, Ungerminated) ~ Site + Host + Treatment + 1|Sample,
data = ken3.pos,
family = 'binomial',)
glmer(cbind(Germinated, Ungerminated) ~ Site + Host + Treatment + 1|Sample,
data = ken3.pos,
family = 'binomial')
mod1 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Host + Treatment + 1|Sample,
data = ken3.pos,
family = 'binomial')
summary(mod1)
anova(mod1)
summary(mod1, test = "Chisq")
mod2 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Host  + 1|Sample,
data = ken3.pos,
family = 'binomial')
anova(mod1, mod2)
anova(mod1, mod2, test = "Chisq")
mod3 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment + Host  + 1|Sample,
data = ken3.pos,
family = 'binomial')
anova(mod1, mod3)
anova(mod1, mod3, test = "Chisq")
?drop1
drop1(mod1)
drop1(mod1, test = "LRT")
drop1(mod1, test = "Chisq")
drop1(mod1, test = "Chisq")
mod1
?drop1
mod4 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Treatment  + 1|Sample,
data = ken3.pos,
family = 'binomial')
mod4 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Treatment  + 1|Sample,
data = ken3.pos,
family = 'binomial')
ken3.pos
ken3.pos$Host
class(ken3.pos$Host)
ken3.pos$Host <- as.factor(ken3.pos$Host)
ken3.pos$Treatment <- as.factor(ken3.pos$Treatment)
ken3.pos$Site <- as.factor(ken3.pos$Site)
mod1 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Host + Treatment + 1|Sample,
data = ken3.pos,
family = 'binomial')
mod2 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Host  + 1|Sample,
data = ken3.pos,
family = 'binomial')
mod3 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment + Host  + 1|Sample,
data = ken3.pos,
family = 'binomial')
mod4 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Treatment  + 1|Sample,
data = ken3.pos,
family = 'binomial')
anova(mod1, mod2)
anova(mod1, mod2, test = "Chisq")
anova(mod1, mod3, test = "Chisq")
anova(mod1, mod4, test = "Chisq")
anova(mod1, mod4, test = "Chisq")
summary(mod4)
####### keep treatment but not host
mod5 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment  + 1|Sample,
data = ken3.pos,
family = 'binomial') # p = 0.95
anova(mod4, mod5, test = "Chisq")
summary(mod5)
mod5
mod6 <- glmer(cbind(Germinated, Ungerminated) ~ 1 + 1|Sample,
data = ken3.pos,
family = 'binomial') # p = 0.46
anova(mod5, mod6)
anova(mod5, mod6, test= "Chisq")
summary(mod5)
anova(mod1)
mod1
summary(mod5)
####### keep treatment but not host
mod5 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.46
summary(mod5)
mod1 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Host + Treatment + (1|Sample),
data = ken3.pos,
family = 'binomial')
mod2 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Host  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p < 0.05
mod3 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment + Host  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.60
mod4 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Treatment  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.95
anova(mod1, mod2, test = "Chisq")
anova(mod1, mod3, test = "Chisq")
anova(mod1, mod4, test = "Chisq")
####### keep treatment and site but not host
mod5 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.46
anova(mod5, mod4, test = "Chisq")
mod6 <- glmer(cbind(Germinated, Ungerminated) ~ 1 + Host + (1|Sample),
data = ken3.pos,
family = 'binomial') # p < 0.01
mod6 <- glmer(cbind(Germinated, Ungerminated) ~ Host + (1|Sample),
data = ken3.pos,
family = 'binomial') # p < 0.01
anova(mod6, mod4, test = "Chisq")
mod6 <- glmer(cbind(Germinated, Ungerminated) ~ Host + (1|Sample),
data = ken3.pos,
family = 'binomial') # p < 0.01
anova(mod6, mod4, test = "Chisq")
anova(mod6, mod5, test = "Chisq")
mod4
anova(mod2, mod5, test = "Chisq")
anova(mod4, mod5, test = "Chisq")
mod6 <- glmer(cbind(Germinated, Ungerminated) ~ Site + (1|Sample),
data = ken3.pos,
family = 'binomial') # p < 0.01
anova(mod4, mod6, test = "Chisq")
summary(mod5)
summary(mod6)
summary(mod4)
plot(mod4)
qplot(mod4)
plot(mod4)
summary(mod4)
version()
version
anova(mod3, mod4, test = "Chisq")
anova(mod1, mod4, test = "Chisq")
mod1
mod4
summary(mod4)
summary(mod1)
#install and load libraries
library(tidyverse)
library(reshape2)
library(jcolors)
####load and reformat data
ken <- read.csv('Tian_project6.25.19.csv', header=T)
ken$percent <- ken$Germinated/(ken$Germinated+ken$Ungerminated)*100 #make a column for percent germination
ken <- subset(ken, Germinated+Ungerminated > 10)
ken2 <- ken %>% group_by(Sample, Site, Host, Treatment) %>% summarize(germ=mean(percent, na.rm=TRUE), num=n()) #get averages for 3 replicates of each treatment/parasite genotype combination
ken2 <- as.data.frame(ken2) #change to dataframe from tibble format
ken.pos <- subset(ken2, Site == "Kisii" | Site=="HomaBay") #subset to remove positive and negative controls before plotting
df <- dcast(ken.pos, Sample + Site + Host ~ Treatment, value.var="germ") #reformat data frame for easier plotting
colnames(df)[4] <- "DS" #ggplot didn't like column names that start with numbers
df$Site <- droplevels(df)$Site #get rid of unused levels for nicer legend
df <- subset(df, Sample != "Sther143") #only one replicate for one of the treatments
df <- subset(df, Sample != "Sther139") #less than 10 seeds in all wells for one of the treatments
####make plot
p1 <- ggplot(df, aes(x=DS, y=ORO, col=Site, pch = Host)) +
geom_point(size = 2.5, alpha = 0.8) +
geom_abline(intercept = 0, slope=1, lty=2) +
theme_classic() +
xlab("Germination % \n5DS") +
ylab("Germination % \nORO") +
scale_color_manual(values = paste0(jcolors(palette="pal5"))[c(2,4)], labels = c("Homa Bay", "Kisii")) +
scale_shape_discrete(labels = c("finger millet", "maize", "sorghum"))
p1
####perform stats to see if Germination rates to different hormones are statistically different between parasites from different sites or collected from different hosts
hist(df$DS-df$ORO) #not normally distributed. If you have time can look into other methods for analysis
# ken3
ken3 <- ken %>% group_by(Sample, Site, Host, Treatment)
ken3.pos <- subset(ken3, Site == "Kisii" | Site=="HomaBay") #subset to remove positive and negative controls before plotting
ken3.pos$Host <- as.factor(ken3.pos$Host)
ken3.pos$Treatment <- as.factor(ken3.pos$Treatment)
ken3.pos$Site <- as.factor(ken3.pos$Site)
# glmm with random effect of sample
library(lme4)
mod1 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Host + Treatment + (1|Sample),
data = ken3.pos,
family = 'binomial')
mod2 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Host  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.004
mod3 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment + Host  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.011
mod4 <- glmer(cbind(Germinated, Ungerminated) ~ Site + Treatment  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.24
####### keep treatment and site but not host
mod5 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.05 to keep site
mod6 <- glmer(cbind(Germinated, Ungerminated) ~ Site + (1|Sample),
data = ken3.pos,
family = 'binomial') # p < 0.01 to keep treatment
summary(mod4)
mod3 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment + Host  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.011
mod3 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment * Host  + (1|Sample),
data = ken3.pos,
family = 'binomial') # p = 0.011
summary(mod3)
ken4 <- subset(ken3, Site == "Kisii")
ken4 <- subset(ken3.pos, Site == "Kisii")
ken4
mod3 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment * Host  + (1|Sample),
data = ken4,
family = 'binomial') # p = 0.011
summary(mod3)
ken4 <- subset(ken3.pos, Site == "Homa Bay")
mod3 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment * Host  + (1|Sample),
data = ken4,
family = 'binomial') # p = 0.011
ken4
ken4 <- subset(ken3.pos, Site == "HomaBay")
ken4
mod3 <- glmer(cbind(Germinated, Ungerminated) ~ Treatment * Host  + (1|Sample),
data = ken4,
family = 'binomial') # p = 0.011
summary(mod3)
library(adegenet)
citation('adegenet')
print(citation('adegenet'), bibtex=TRUE)
citation('adegenet')
library(raster)
library(viridis)
library(maps)
library(pals)
library(dplyr)
all <- raster('/Users/ebellis/Desktop/Projects/StigaxSorghum/MacroecologyMS/Fig1/all.CLY250.tif')
maiz <- raster('/Users/ebellis/Desktop/Projects/StigaxSorghum/MacroecologyMS/Fig1/maiz.CLY250.tif')
sorg <- raster('/Users/ebellis/Desktop/Projects/StigaxSorghum/MacroecologyMS/Fig1/sorg.CLY250.tif')
mill <- raster('/Users/ebellis/Desktop/Projects/StigaxSorghum/MacroecologyMS/Fig1/mill.CLY250.tif')
gps <- read.csv('~/Documents/GitHub/StrigaWGS/Fig1_mapxPCoA/Striga_GPS.csv')
head(gps)
cbind(gps$Lat, gps$Lon)
unique(cbind(gps$Lat, gps$Lon))
gps2<- unique(cbind(gps$Lat, gps$Lon))
extract(all, gps2)
extract(gps2, all)
extract(all, gps2)
gps2<- unique(cbind.data.frame(gps$Lon, gps$Lat))
extract(all, gps2)
all_hs <- extract(all, gps2)
mill_hs <- extract(mill, gps2)
mill_hs <- extract(sorg, gps2)
mill_hs <- extract(mill, gps2)
sorg_hs <- extract(sorg, gps2)
maiz_hs <- extract(maiz, gps2)
cbind.data.frame(all_hs, mill_hs, sorg_hs, maiz_hs)
gps
filter(gps, Site == "Kisii" | Site=="Homa Bay")
filter(gps, Site == "Kisii" | Site=="Homa Bay" | Site=="Homa Bay 2")
filter(gps, Site == "Kisii" | Site=="Homa Bay" | Site=="Homa Bay 2") %>% unique()
filter(gps, Site == "Kisii" | Site=="Homa Bay" | Site=="Homa Bay 2") %>% select(c(Lon, Lat) %>% unique()
)
filter(gps, Site == "Kisii" | Site=="Homa Bay" | Site=="Homa Bay 2") %>% select(c(Lon, Lat)) %>% unique()
filter(gps, Site == "Kisii" | Site=="Homa Bay" | Site=="Homa Bay 2") %>% select(Lon, Lat) %>% unique()
filter(gps, Site == "Kisii" | Site=="Homa Bay" | Site=="Homa Bay 2")
filter(gps, Site == "Kisii" | Site=="Homa Bay" | Site=="Homa Bay 2") %>% dplyr::select(Lon, Lat)
filter(gps, Site == "Kisii" | Site=="Homa Bay" | Site=="Homa Bay 2") %>% dplyr::select(Lon, Lat) %>% unique()
coords <- filter(gps, Site == "Kisii" | Site=="Homa Bay" | Site=="Homa Bay 2") %>% dplyr::select(Lon, Lat) %>% unique()
all_hs <- extract(all, coords)
all_hs
mill_hs <- extract(mill, coords)
mill_hs
maiz_hs <- extract(maiz, coords)
mais_hs
maiz_h
maiz_hs
sorg_hs <- extract(sorg, coords)
sorg_hs
gps2
sorg_hs <- extract(sorg, gps2)
sorg_hs
mill_hs <- extract(mill, gps2)
maiz_hs <- extract(maiz, gps2)
sorg_hs
mean(sorg_hs)
mean(mill_hs)
mean(maiz_hs)
setwd("/Users/ebellis/Documents/GitHub/StrigaWGS/")
#setwd("/Users/ebellis/Documents/GitHub/StrigaWGS/")
library(tidyverse)
library(ape)
library(jcolors)
k31 <- read.table("k31.mash.out", header=F)
k31 <- k31 %>% select(1:3)
colnames(k31) <- c("S1","S2","dist")
meta <- read.csv('Fig1_mapxPCoA/Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% filter(SampleID %in% unique(k31$S1))
k31 <- read.table("k31.mash.out", header=F)
setwd("/Users/ebellis/Documents/GitHub/StrigaWGS/Fig1_mapxPCoA/")
library(tidyverse)
library(ape)
library(jcolors)
k31 <- read.table("k31.mash.out", header=F)
k31 <- k31 %>% select(1:3)
colnames(k31) <- c("S1","S2","dist")
gead(k31)
library(adegenet)
library(tidyverse)
k31 <- read.table("k31.mash.out", header=F)
k31 <- k31 %>% dplyr::select(1:3)
colnames(k31) <- c("S1","S2","dist")
k31$S1 <- as.factor(k31$S1)
k31$S2 <- as.factor(k31$S2)
k31_df <- k31
k31 <- as.matrix(k31 %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31)
library(geodist)
modern <- read.csv("../Fig1/Striga_GPS.csv", header=T)
modern <- modern %>% dplyr::select(SampleID, Lat, Lon)
modern <- modern %>% filter(SampleID %in% unique(rownames(k31)))
library(geodist)
modern <- read.csv("Striga_GPS.csv", header=T)
modern <- modern %>% dplyr::select(SampleID, Lat, Lon)
modern <- modern %>% filter(SampleID %in% unique(rownames(k31)))
geomat <- geodist(modern, sequential = F, measure = "geodesic")/1000
rownames(geomat) <- modern$SampleID
colnames(geomat) <- modern$SampleID
geomat_mat <- geomat
geomat <- as.dist(geomat)
ibd <- mantel.randtest(k31.dist,geomat)
plot(ibd) # significant IBD, p=0.003
k31_df$Same_host <- 'N'
k31_df$km <- 'N'
modern <- read.csv("../Fig1/Striga_GPS.csv", header=T)
for (i in 1:nrow(k31_df)) {
if (modern[modern$SampleID == k31_df$S1[i],3] ==
modern[modern$SampleID == k31_df$S2[i],3]) {
k31_df$Same_host[i] <- 'Y'
}
k31_df$km[i] <- geomat_mat[k31_df$S1[i],k31_df$S2[i]]
}
k31_df$km <- as.numeric(k31_df$km)
p <- ggplot(k31_df, aes(x = km, y = dist)) +
geom_point(alpha = 0.1) +
ylim(c(0.02, 0.030)) +
geom_smooth(method='lm', se = F, lty = 2) +
theme_classic() +
xlab("Geographic distance (km)") +
ylab("Genetic distance") +
facet_grid(.~Same_host)# these are the self comparisons
p
same_pop <- subset(k31_df, km == 0 & S1 != S2)
diff_pop <- subset(k31_df, km >= 100 & S1 != S2)
quantile(same_pop$dist)
quantile(diff_pop$dist)
mod1 <- lm(dist ~ km, data = k31_df)
mod1
summary(mod1)
