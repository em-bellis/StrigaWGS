### data points from sampling
modern <- read.csv("data/Striga_GPS_sequenced.csv", header=T)
### data points from sampling
modern <- read.csv("Fig1_mapxPCoA/data/Striga_GPS_sequenced.csv", header=T)
labs <- read.csv('Striga_GPS_sequenced.csv', header = T)
labs <- read.csv('Fig1_mapxPCoA/data/Striga_GPS_sequenced.csv', header = T)
labs$Site <- as.factor(str_replace(labs$Site, "2","") %>% str_trim())
library(tidyverse)
library(pheatmap)
kin <- read.table('ALL.dist', skip = 2)
kin <- read.table('Fig2_kinship/data/ALL.dist', skip = 2)
kin <- as.matrix(kin[,-1])
labs <- read.csv('Fig1_mapxPCoA/data/Striga_GPS_sequenced.csv', header = T)
labs$Site <- as.factor(str_replace(labs$Site, "2","") %>% str_trim())
rownames(kin) <- as.factor(labs$SampleID)
colnames(kin) <- as.factor(labs$SampleID)
library(tidyverse)
library(cowplot)
library(tidyverse)
library(pheatmap)
kin <- read.table('Fig2_kinship/data/ALL.dist', skip = 2)
kin <- as.matrix(kin[,-1])
labs <- read.csv('Fig1_mapxPCoA/data/Striga_GPS_sequenced.csv', header = T)
labs$Site <- as.factor(str_replace(labs$Site, "2","") %>% str_trim())
rownames(kin) <- as.factor(labs$SampleID)
colnames(kin) <- as.factor(labs$SampleID)
head(kin)
kin["SH009"]
kin["SH009",]
min(kin)
max(kin)
sort(kin)
sort(kin) %>% tail()
max(kin)
?pheatmap
citation(pheatmap)
citation("pheatmap")
p <- pheatmap(kin, color = magma(100), annotation_col = host_df, annotation_row = site_df, show_rownames = F, border_color = NA,
annotation_colors = ann_colors, legend = F, fontsize_col = 4)
library(viridis)
p <- pheatmap(kin, color = magma(100), annotation_col = host_df, annotation_row = site_df, show_rownames = F, border_color = NA,
annotation_colors = ann_colors, legend = F, fontsize_col = 4)
kin <- read.table('Fig2_kinship/data/ALL.dist', skip = 2)
kin <- as.matrix(kin[,-1])
labs <- read.csv('Fig1_mapxPCoA/data/Striga_GPS_sequenced.csv', header = T)
labs$Site <- as.factor(str_replace(labs$Site, "2","") %>% str_trim())
rownames(kin) <- as.factor(labs$SampleID)
colnames(kin) <- as.factor(labs$SampleID)
### for annotations
host_df = data.frame(as.factor("Host" = labs$Host))
rownames(host_df) = rownames(kin)
site_df = data.frame(as.factor("Site" = labs$Site))
rownames(site_df) = rownames(kin)
kin <- read.table('Fig2_kinship/data/ALL.dist', skip = 2)
kin <- as.matrix(kin[,-1])
labs <- read.csv('Fig1_mapxPCoA/data/Striga_GPS_sequenced.csv', header = T)
labs$Site <- as.factor(str_replace(labs$Site, "2","") %>% str_trim())
rownames(kin) <- as.factor(labs$SampleID)
colnames(kin) <- as.factor(labs$SampleID)
### for annotations
host_df = data.frame(as.factor("Host" = labs$Host))
rownames(host_df) = rownames(kin)
labs
head(labs)
### for annotations
host_df = data.frame(as.factor("Host" = labs$Host))
rownames(host_df) = rownames(kin)
### for annotations
host_df = as.data.frame(as.factor("Host" = labs$Host))
### for annotations
host_df = as.data.frame(as.factor(Host = labs$Host))
### for annotations
host_df = data.frame(("Host" = labs$Host))
rownames(host_df) = rownames(kin)
site_df = data.frame(as.factor("Site" = labs$Site))
site_df = data.frame("Site" = labs$Site)
str(site_df)
rownames(site_df) = rownames(kin)
ann_colors <- list(Host = c('finger millet' = "#1B9E77", maize = "aquamarine", sorghum = "plum", sugarcane = "darkorchid"),
Site = c(Chemelil= "#628395", 'Homa Bay' = "#C5D86D", Kibos ="#DB2763", Kisii = "#17377A", Muhoroni ="#FC471E", Mumias ="#55DDE0"))
p <- pheatmap(kin, color = magma(100), annotation_col = host_df, annotation_row = site_df, show_rownames = F, border_color = NA,
annotation_colors = ann_colors, legend = F, fontsize_col = 4)
ann_colors <- list(Host = c('finger millet' = "#1B9E77", maize = "aquamarine", sorghum = "plum", sugarcane = "darkorchid"),
Site = c(Chemelil= "#628395", 'Homa Bay' = "#C5D86D", Kibos ="#DB2763", Kisii = "#17377A", Muhoroni ="#FC471E", Mumias ="#55DDE0"))
p <- pheatmap(kin, color = magma(100), annotation_col = host_df, annotation_row = site_df, show_rownames = F, border_color = NA,
annotation_colors = ann_colors, legend = F, fontsize_col = 4)
p
ann_colors
site_df
ann_colors
host_df
kin <- read.table('Fig2_kinship/data/ALL.dist', skip = 2)
kin <- as.matrix(kin[,-1])
labs <- read.csv('Fig1_mapxPCoA/data/Striga_GPS_sequenced.csv', header = T)
labs$Site <- as.factor(str_replace(labs$Site, "2","") %>% str_trim())
rownames(kin) <- as.factor(labs$SampleID)
colnames(kin) <- as.factor(labs$SampleID)
### for annotations
host_df = data.frame("Host" = labs$Host)
rownames(host_df) = rownames(kin)
site_df = data.frame("Site" = labs$Site)
rownames(site_df) = rownames(kin)
host_df
ann_colors <- list(Host = c('finger millet' = "#1B9E77", maize = "aquamarine", sorghum = "plum", sugarcane = "darkorchid"),
Site = c(Chemelil= "#628395", 'Homa Bay' = "#C5D86D", Kibos ="#DB2763", Kisii = "#17377A", Muhoroni ="#FC471E", Mumias ="#55DDE0"))
p <- pheatmap(kin, color = magma(100), annotation_col = host_df, annotation_row = site_df, show_rownames = F, border_color = NA,
annotation_colors = ann_colors, legend = F, fontsize_col = 4)
p
#install and load libraries
library(tidyverse)
library(reshape2)
library(jcolors)
####load and reformat data
ken <- read.csv('Fig3_germination/Tian_project6.25.19.csv', header=T)
ken$percent <- ken$Germinated/(ken$Germinated+ken$Ungerminated)*100 #make a column for percent germination
ken <- subset(ken, Germinated+Ungerminated > 10)
ken2 <- ken %>% group_by(Sample, Site, Host, Treatment) %>% summarize(germ=mean(percent, na.rm=TRUE), num=n()) #get averages for 3 replicates of each treatment/parasite genotype combination
ken2 <- as.data.frame(ken2) #change to dataframe from tibble format
ken.pos <- subset(ken2, Site == "Kisii" | Site=="HomaBay") #subset to remove positive and negative controls before plotting
df <- dcast(ken.pos, Sample + Site + Host ~ Treatment, value.var="germ") #reformat data frame for easier plotting
colnames(df)[4] <- "DS" #ggplot didn't like column names that start with numbers
df$Site <- droplevels(df)$Site #get rid of unused levels for nicer legend
df <- subset(df, Sample != "Sther143") #only one replicate for one of the treatments
df <- subset(df, Sample != "Sther139") #less than 10 seeds in all wells for one of the treatments
df
df %>% filter(Host == "Finger Millet")
df %>% filter(Host == "FingerMillet")
####load and reformat data
ken <- read.csv('Fig3_germination/Tian_project6.25.19.csv', header=T)
ken$percent <- ken$Germinated/(ken$Germinated+ken$Ungerminated)*100 #make a column for percent germination
ken <- subset(ken, Germinated+Ungerminated > 10)
ken
ken %>% filter(Host == "FingerMillet")
ken %>% filter(Host == "FingerMillet" && Treatment == "5DO")
ken %>% filter(Host == "FingerMillet" && Treatment == "5DS")
ken %>% filter(Host == "FingerMillet" & Treatment == "5DS")
# libraries
library(tidyverse)
fst <- read.table('kf.km.fst_1x1', row.names = NULL, header = T)
fst <- read.table('Fig5_ANGSD/angsd_output/kf.km.fst_1x1', row.names = NULL, header = T)
colnames(fst) <- c('region','Chr','WinCenter','Nsites','Fst')
head(fst)
mean(fst$Fst)
mean(fst$Fst, na.omit = T)
fst$Fst %>% na.omit() %>% length()
fst$Fst %>% length()
fst$Fst %>% na.omit() %>% length()
fst$Fst %>% na.omit() %>% mean()
fst$Fst %>% na.omit() %>% median()
fst$Fst %>% na.omit() %>% stderr()
fst$Fst %>% na.omit() %>% var()
fst$Fst %>% na.omit() %>% stdev()
fst$Fst %>% na.omit() %>% std()
fst$Fst %>% na.omit() %>% sd()
fst$Fst %>% na.omit() %>% se()
fst$Fst %>% na.omit() %>% sd()
# read in files
tajd <- read.table('Fig5_ANGSD/angsd_output/kisii.theta1x1kb.gz.pestPG', header = T, comment.char="")
head(tajd)
tajd$Tajima %>% na.omit() %>% sd()
tajd$Tajima %>% na.omit() %>% median()
tajd$Tajima %>% na.omit() %>% mean()
fst$Fst %>% na.omit() %>% sd()
fst$Fst %>% na.omit() %>% n()
fst$Fst %>% na.omit() %>% length()
0.0344/sqrt(237606)
fst$Fst %>% na.omit() %>% median()
fst$Fst %>% na.omit() %>% filter(Fst >0.2) %>% length()
filter(fst, Fst >0.2) %>% length()
filter(fst, Fst >0.2) %>% nrow()
1288/nrow(fst)
filter(fst, Fst >0.15) %>% nrow()
4205/nrow(fst)
fst$Fst %>% na.omit() %>% geom_histogram()
ggplot(fst, aes(x = Fst)) + geom_histogram()
library(tidyverse)
library(cowplot)
pop = c("kisii","homabay")
### load and tidy input data
for (i in 1:2) {
# file too large for github repo
gst <- read.table(paste0('~/Desktop/Projects/StigaxSorghum/KenyaWGS/alan/',pop[i],'/GST_Output.txt'))
colnames(gst) <- c('kmer','HS','HT','DST','GST')
gst$pop <- paste0(pop[i])
if (i == 1) {
gst_all <- gst
} else {
gst_all <- rbind.data.frame(gst_all, gst)
}
}
gst_all$GST <- as.numeric(gst_all$GST)
head(gst_all)
sum(is.na(gst$GST))
library(jcolors)
### graph Gst
p <- ggplot(gst_all, aes(x = GST, col = pop)) +
geom_density() +
theme_classic() +
xlab(expression(italic(G[ST]))) +
scale_colour_discrete(name = "Population", labels = c("Homa Bay", "Kisii"), values=jcolors(palette="pal5"))[c(2,4)]) +
theme(legend.position = c(0.8, 0.8))
### graph Gst
p <- ggplot(gst_all, aes(x = GST, col = pop)) +
geom_density() +
theme_classic() +
xlab(expression(italic(G[ST]))) +
scale_colour_discrete(name = "Population", labels = c("Homa Bay", "Kisii"), values=jcolors(palette="pal5"))[c(2,4)]) +
theme(legend.position = c(0.8, 0.8))
jcolors(palette="pal5"))[c(2,4)]
### graph Gst
p <- ggplot(gst_all, aes(x = GST, col = pop)) +
geom_density() +
theme_classic() +
xlab(expression(italic(G[ST]))) +
scale_colour_discrete(name = "Population", labels = c("Homa Bay", "Kisii"), values=jcolors(palette="pal5")[c(2,4)]) +
theme(legend.position = c(0.8, 0.8))
### graph Gst
p <- ggplot(gst_all, aes(x = GST, col = pop)) +
geom_density() +
theme_classic() +
xlab(expression(italic(G[ST]))) +
scale_colour_discrete(name = "Population", labels = c("Homa Bay", "Kisii"), values=c(jcolors(palette="pal5")[c(2,4)])) +
theme(legend.position = c(0.8, 0.8))
?scale_colour_discrete
### graph Gst
p <- ggplot(gst_all, aes(x = GST, col = pop)) +
geom_density() +
theme_classic() +
xlab(expression(italic(G[ST]))) +
scale_colour_discrete(name = "Population", labels = c("Homa Bay", "Kisii"), hue=c(jcolors(palette="pal5")[c(2,4)])) +
theme(legend.position = c(0.8, 0.8))
### graph Gst
p <- ggplot(gst_all, aes(x = GST, col = pop)) +
geom_density() +
theme_classic() +
xlab(expression(italic(G[ST]))) +
scale_colour_manual(name = "Population", labels = c("Homa Bay", "Kisii"), values=c(jcolors(palette="pal5")[c(2,4)])) +
theme(legend.position = c(0.8, 0.8))
p
jcolors(palette="pal5")[c(2,4)]
### graph Gst
p <- ggplot(gst_all, aes(x = GST, col = pop)) +
geom_density() +
theme_classic() +
xlab(expression(italic(G[ST]))) +
scale_colour_manual(name = "Population", labels = c("Homa Bay", "Kisii"), values=c("#C5D86D","#17377A")) +
theme(legend.position = c(0.8, 0.8))
p
### graph Gst
p <- ggplot(gst_all, aes(x = GST, col = pop)) +
geom_density(lwd = 2) +
theme_classic() +
xlab(expression(italic(G[ST]))) +
scale_colour_manual(name = "Population", labels = c("Homa Bay", "Kisii"), values=c("#C5D86D","#17377A")) +
theme(legend.position = c(0.8, 0.8))
p
### graph Gst
p <- ggplot(gst_all, aes(x = GST, col = pop)) +
geom_density(lwd = 1.5) +
theme_classic() +
xlab(expression(italic(G[ST]))) +
scale_colour_manual(name = "Population", labels = c("Homa Bay", "Kisii"), values=c("#C5D86D","#17377A")) +
theme(legend.position = c(0.8, 0.8))
p
### graph Gst
p <- ggplot(gst_all, aes(x = GST, col = pop)) +
geom_density(lwd = 1) +
theme_classic() +
xlab(expression(italic(G[ST]))) +
scale_colour_manual(name = "Population", labels = c("Homa Bay", "Kisii"), values=c("#C5D86D","#17377A")) +
theme(legend.position = c(0.8, 0.8))
p
### graph representative k-mer distribution for individual SH046
sh46 <- read.csv('Fig4_kmers/SH046.kmer.hist', header = T)
### graph representative k-mer distribution for individual SH046
sh46 <- read.csv('Fig4_kmers/data/SH046.kmer.hist', header = T)
getwd()
### graph representative k-mer distribution for individual SH046
sh46 <- read.csv('Fig4_kmers/Fig4/data/SH046.kmer.hist', header = T)
getwd()
q <- ggplot(sh46, aes(x = abundance, y = count)) +
geom_line() +
geom_point() +
theme_classic() +
xlim(c(0,50))
nrow(subset(gst_all, GST >= 0.5 & pop == "kisii"))/nrow(subset(gst_all, pop == "kisii")) # 4% of kisii kmers
h_prop <- nrow(subset(gst_all, GST >= 0.5 & pop == "homabay"))/nrow(subset(gst_all, pop == "homabay")) # 0.6% of homa bay kmers
h_perm <- read.table("Fig4_kmers/permutation_analysis/results/homabay.txt", header = F)
# distribution of k-mer proportions from permutations
k_perm <- read.table("Fig4_kmers/permutation_analysis/results/kisii.txt", header = F)
head(k_perm)
ggplot(k_perm, aes(x=V1)) +
geom_histogram()
ggplot(k_perm, aes(x=V1)) +
geom_histogram() +
geom_vline(xintercept = k_prop)
### graph results of permutation analysis
# observed proportions
k_prop <- nrow(subset(gst_all, GST >= 0.5 & pop == "kisii"))/nrow(subset(gst_all, pop == "kisii")) # 4% of kisii kmers
h_prop <- nrow(subset(gst_all, GST >= 0.5 & pop == "homabay"))/nrow(subset(gst_all, pop == "homabay")) # 0.6% of homa bay kmers
ggplot(k_perm, aes(x=V1)) +
geom_histogram() +
geom_vline(xintercept = k_prop)
ggplot(k_perm, aes(x=V1)) +
geom_histogram() +
theme_classic() +
geom_vline(xintercept = k_prop)
ggplot(k_perm, aes(x=V1)) +
geom_histogram(fill = "#17377A", col = "black") +
theme_classic() +
geom_vline(xintercept = k_prop)
ggplot(k_perm, aes(x=V1)) +
geom_histogram(fill = "#17377A", col = "black") +
theme_classic() +
geom_vline(xintercept = k_prop, lty = 2)
ggplot(k_perm, aes(x=V1)) +
geom_histogram(fill = "#17377A", col = "black", alpha = 0.05) +
theme_classic() +
geom_vline(xintercept = k_prop, lty = 2)
ggplot(k_perm, aes(x=V1)) +
geom_histogram(fill = "#17377A", col = "black", alpha = 0.5) +
theme_classic() +
geom_vline(xintercept = k_prop, lty = 2)
ggplot(k_perm, aes(x=V1)) +
geom_histogram(fill = "#17377A", col = "black", lwd = 0.5) +
theme_classic() +
geom_vline(xintercept = k_prop, lty = 2)
ggplot(k_perm, aes(x=V1)) +
geom_histogram(fill = "#17377A", col = "black", lwd = 0.05) +
theme_classic() +
geom_vline(xintercept = k_prop, lty = 2)
ggplot(k_perm, aes(x=V1)) +
geom_histogram(fill = "#17377A", col = "black", lwd = 0.1) +
theme_classic() +
geom_vline(xintercept = k_prop, lty = 2)
ggplot(k_perm, aes(x=V1)) +
geom_histogram(fill = "#17377A", col = "black", lwd = 0.2) +
theme_classic() +
geom_vline(xintercept = k_prop, lty = 2)
s <- ggplot(h_perm, aes(x=V1)) +
geom_histogram(fill = "#C5D86D", col = "black", lwd = 0.2) +
theme_classic() +
geom_vline(xintercept = h_prop, lty = 2)
s
r <- ggplot(k_perm, aes(x=V1)) +
geom_histogram(fill = "#17377A", col = "black", lwd = 0.2) +
theme_classic() +
geom_vline(xintercept = k_prop, lty = 2)+
xlim(c(0,0.050))
s <- ggplot(h_perm, aes(x=V1)) +
geom_histogram(fill = "#C5D86D", col = "black", lwd = 0.2) +
theme_classic() +
geom_vline(xintercept = h_prop, lty = 2) +
xlim(c(0,0.050))
r
s
s <- ggplot(h_perm, aes(x=V1)) +
geom_histogram(fill = "#C5D86D", col = "black", lwd = 0.2) +
theme_classic() +
geom_vline(xintercept = h_prop, lty = 2) +
xlim(c(0,0.050)) +
ylim(c(0,250))
s
ggplot(h_perm, aes(x=V1)) +
geom_histogram(fill = "#C5D86D", col = "black", lwd = 0.2) +
theme_classic() +
geom_vline(xintercept = h_prop, lty = 2)
r <- ggplot(k_perm, aes(x=V1)) +
geom_histogram(fill = "#17377A", col = "black", lwd = 0.2) +
theme_classic() +
geom_vline(xintercept = k_prop, lty = 2)+
xlim(c(-0.001,0.050))
s <- ggplot(h_perm, aes(x=V1)) +
geom_histogram(fill = "#C5D86D", col = "black", lwd = 0.2) +
theme_classic() +
geom_vline(xintercept = h_prop, lty = 2) +
xlim(c(-0.001,0.050))
q
r
s
s <- ggplot(h_perm, aes(x=V1)) +
geom_histogram(fill = "#C5D86D", col = "black", lwd = 0.2) +
theme_classic() +
geom_vline(xintercept = h_prop, lty = 2) +
xlim(c(-0.001,0.050)) +
xlab(expression("Proportion 31-mers w/G[ST] >0.5"))
s
s <- ggplot(h_perm, aes(x=V1)) +
geom_histogram(fill = "#C5D86D", col = "black", lwd = 0.2) +
theme_classic() +
geom_vline(xintercept = h_prop, lty = 2) +
xlim(c(-0.001,0.050)) +
xlab(expression("Proportion 31-mers w/G"["ST"],">0.5"))
s
s <- ggplot(h_perm, aes(x=V1)) +
geom_histogram(fill = "#C5D86D", col = "black", lwd = 0.2) +
theme_classic() +
geom_vline(xintercept = h_prop, lty = 2) +
xlim(c(-0.001,0.050)) +
xlab(expression("Proportion 31-mers w/G"["ST"]">0.5"))
s <- ggplot(h_perm, aes(x=V1)) +
geom_histogram(fill = "#C5D86D", col = "black", lwd = 0.2) +
theme_classic() +
geom_vline(xintercept = h_prop, lty = 2) +
xlim(c(-0.001,0.050)) +
xlab(expression("Proportion 31-mers w/G"["ST"],">0.5"))
s
s <- ggplot(h_perm, aes(x=V1)) +
geom_histogram(fill = "#C5D86D", col = "black", lwd = 0.2) +
theme_classic() +
geom_vline(xintercept = h_prop, lty = 2) +
xlim(c(-0.001,0.050)) +
xlab(expression(paste("Proportion 31-mers w/G"["ST"],">0.5")))
s
s <- ggplot(h_perm, aes(x=V1)) +
geom_histogram(fill = "#C5D86D", col = "black", lwd = 0.2) +
theme_classic() +
geom_vline(xintercept = h_prop, lty = 2) +
xlim(c(-0.001,0.050)) +
xlab(expression(paste("Proportion",italic("31"),"-mers w/G"["ST"]," >0.5")))
s
s <- ggplot(h_perm, aes(x=V1)) +
geom_histogram(fill = "#C5D86D", col = "black", lwd = 0.2) +
theme_classic() +
geom_vline(xintercept = h_prop, lty = 2) +
xlim(c(-0.001,0.050)) +
xlab(expression(paste("Proportion ",italic("31"),"-mers w/G"["ST"]," >0.5")))
s
s <- ggplot(h_perm, aes(x=V1)) +
geom_histogram(fill = "#C5D86D", col = "black", lwd = 0.2) +
theme_classic() +
geom_vline(xintercept = h_prop, lty = 2) +
xlim(c(-0.001,0.050)) +
xlab(expression(paste("Proportion ",italic("31"),"-mers w/",italic("G"["ST"])," >0.5")))
s
r <- ggplot(k_perm, aes(x=V1)) +
geom_histogram(fill = "#17377A", col = "black", lwd = 0.2) +
theme_classic() +
geom_vline(xintercept = k_prop, lty = 2)+
xlim(c(-0.001,0.050)) +
xlab(expression(paste("Proportion ",italic("31"),"-mers w/",italic("G"["ST"])," >0.5")))
s <- ggplot(h_perm, aes(x=V1)) +
geom_histogram(fill = "#C5D86D", col = "black", lwd = 0.2) +
theme_classic() +
geom_vline(xintercept = h_prop, lty = 2) +
xlim(c(-0.001,0.050)) +
xlab(expression(paste("Proportion ",italic("31"),"-mers w/",italic("G"["ST"])," >0.5")))
plot_grid(p, q, r, s, labels = c('A', 'B', 'C','D'), label_size = 12, rel_widths = c(1, 1, 1, 1))
plot_grid(p, r, q, s, labels = c('A', 'B', 'C','D'), label_size = 12, rel_widths = c(2, 1, 2, 1))
plot_grid(p, r, q, s, labels = c('A', 'B', 'C','D'), label_size = 12, rel_widths = c(1, 1, 1, 1))
q <- ggplot(sh46, aes(x = abundance, y = count)) +
geom_line() +
geom_point(size = 1) +
theme_classic() +
xlim(c(0,50))
q
plot_grid(p, r, q, s, labels = c('A', 'B', 'C','D'), label_size = 12, rel_widths = c(1, 1, 1, 1))
q <- ggplot(sh46, aes(x = abundance, y = count)) +
geom_line() +
geom_point(size = 0.5) +
theme_classic() +
xlim(c(0,50))
q
plot_grid(p, r, q, s, labels = c('A', 'B', 'C','D'), label_size = 12, rel_widths = c(1, 1, 1, 1))
max(h_perm)
max(k_perm)
pdf("Fig4_kmers.pdf", width = 6, height = 3)
plot_grid(p, r, q, s, labels = c('A', 'B', 'C','D'), label_size = 12, rel_widths = c(1, 1, 1, 1))
dev.off()
q <- ggplot(sh46, aes(x = abundance, y = count)) +
geom_line() +
geom_point(size = 0.5) +
theme_classic() +
xlim(c(0,50)) +
xlab(expression(paste(italic("31"),"-mer abundance")))
q
### graph Gst
p <- ggplot(gst_all, aes(x = GST, col = pop)) +
geom_density(lwd = 1) +
theme_classic() +
xlab(expression(italic(G[ST]))) +
scale_colour_manual(name = "Population", labels = c("Homa Bay", "Kisii"), values=c("#C5D86D","#17377A")) +
theme(legend.position = c(0.7, 0.7))
pdf("Fig4_kmers.pdf", width = 6, height = 3)
plot_grid(p, r, q, s, labels = c('A', 'B', 'C','D'), label_size = 12, rel_widths = c(1, 1, 1, 1))
dev.off()
max(k_perm)
max(h_perm)
