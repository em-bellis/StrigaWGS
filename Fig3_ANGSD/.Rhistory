<<<<<<< Updated upstream
#setwd("/Users/ebellis/Documents/GitHub/StrigaWGS/")
library(tidyverse)
library(ape)
library(jcolors)
k31 <- read.table("k31.mash.out", header=F)
k31 <- k31 %>% select(1:3)
colnames(k31) <- c("S1","S2","dist")
meta <- read.csv('../Fig1/Striga_GPS.csv', header=T)
setwd("/Users/ebellis/Documents/GitHub/StrigaWGS/")
meta <- read.csv('../Fig1/Striga_GPS.csv', header=T)
meta <- read.csv('Fig1/Striga_GPS.csv', header=T)
meta <- read.csv('Fig1_mapxPCoA/Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% filter(SampleID %in% unique(k31$S1))
# function to run PCoA and return clean df
runPCoA <- function(part, meta) {
# filter metadata
if(part == "A") {
meta_sub <- meta
} else if (part == "B") {
meta_sub <- filter(meta, Site != "Kisii") %>%
filter(Site != "Homa Bay")
meta_subkh <- filter(meta,
SampleID =="SH130"| SampleID =="SH134"|
SampleID =="SH138"| SampleID =="SH139"|
SampleID =="SH146"| SampleID =="SH124"|
SampleID =="SH117"| SampleID =="SH113"|
SampleID =="SH111"|SampleID =="SH104")
meta_sub <- rbind(meta_sub, meta_subkh)
} else if (part == "C") {
meta_sub <- filter(meta, Site == "Kisii")
} else if (part == "D") {
meta_sub <- filter(meta, Site == "Homa Bay")
}
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
# create df of results
df <- cbind.data.frame("SampleID"=rownames(k31.pcoa$vectors),
"Axis1"=k31.pcoa$vectors[,1],
"Axis2"=k31.pcoa$vectors[,2])
# add metadata
#meta <- read.csv('Striga_GPS.csv', header=T)
#meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
tmp <- meta %>% select(SampleID, Site, Host)
df <- inner_join(tmp, df)
return(df)
}
meta <- read.csv('Fig1_mapxPCoA/Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% filter(SampleID %in% unique(k31$S1))
# function to run PCoA and return clean df
runPCoA <- function(part, meta) {
# filter metadata
if(part == "A") {
meta_sub <- meta
} else if (part == "B") {
meta_sub <- filter(meta, Site != "Kisii") %>%
filter(Site != "Homa Bay")
meta_subkh <- filter(meta,
SampleID =="SH130"| SampleID =="SH134"|
SampleID =="SH138"| SampleID =="SH139"|
SampleID =="SH146"| SampleID =="SH124"|
SampleID =="SH117"| SampleID =="SH113"|
SampleID =="SH111"|SampleID =="SH104")
meta_sub <- rbind(meta_sub, meta_subkh)
} else if (part == "C") {
meta_sub <- filter(meta, Site == "Kisii")
} else if (part == "D") {
meta_sub <- filter(meta, Site == "Homa Bay")
}
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
# create df of results
df <- cbind.data.frame("SampleID"=rownames(k31.pcoa$vectors),
"Axis1"=k31.pcoa$vectors[,1],
"Axis2"=k31.pcoa$vectors[,2])
# add metadata
#meta <- read.csv('Striga_GPS.csv', header=T)
#meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
tmp <- meta %>% select(SampleID, Site, Host)
df <- inner_join(tmp, df)
return(df)
}
# loop through each figure part to create final df
FigParts = c("A","B","C","D")
i = 2
df <- runPCoA(FigParts[i], meta)
df
k31.dist
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
meta_sub <- filter(meta, Site != "Kisii") %>%
filter(Site != "Homa Bay")
meta_subkh <- filter(meta,
SampleID =="SH130"| SampleID =="SH134"|
SampleID =="SH138"| SampleID =="SH139"|
SampleID =="SH146"| SampleID =="SH124"|
SampleID =="SH117"| SampleID =="SH113"|
SampleID =="SH111"|SampleID =="SH104")
meta_sub <- rbind(meta_sub, meta_subkh)
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.pcoa
meta_sub <- meta
meta
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.pcoa$vectors
k31.pcoa$trace
k31.pcoa$values
meta_sub <- filter(meta, Site == "Kisii")
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.pcoa$values
meta_sub <- filter(meta, Site == "Homa Bay")
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.pcoa$trace
k31.pcoa$values
meta_sub <- filter(meta, Site == "Homa Bay")
meta_sub
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.pcoa$values
meta_sub <- filter(meta, Site == "Kisii")
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.pcoa$values
k31.pcoa
meta_sub <- filter(meta, Site == "Homa Bay")
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt
k31
nrow(k31)
head(k31)
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31_flt
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.dist
k31.pcoa
k31.pcoa_hb <- k31.pcoa
meta_sub <- filter(meta, Site == "Kisii")
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.pcoa
cbind(k31.pcoa$values$Eigenvalues, k31.pcoa_hb$values$Eigenvalues)
cbind(k31.pcoa$values$Broken_stick, k31.pcoa_hb$values$Broken_stick)
k31.pcoa$values
cbind(k31.pcoa$values$Relative_eig, k31.pcoa_hb$values$Relative_eig)
meta_sub <- filter(meta, Site != "Kisii") %>%
filter(Site != "Homa Bay")
meta_subkh <- filter(meta,
SampleID =="SH130"| SampleID =="SH134"|
SampleID =="SH138"| SampleID =="SH139"|
SampleID =="SH146"| SampleID =="SH124"|
SampleID =="SH117"| SampleID =="SH113"|
SampleID =="SH111"|SampleID =="SH104")
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.pcoa$values$Relative_eig
meta_sub <- meta
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.pcoa$values$Relative_eig
k31.pcoa$values
library(tidyverse)
library(jcolors)
# function to get diff in allele frequency
getAF <- function(pop1, pop2) {
df_k <- inner_join(pop1, pop2, by = c("chromo", "position"))
df_k$AF <- NULL
for (i in 1:nrow(df_k)) {
if (df_k$major.x[i] == df_k$major.y[i]){
df_k$AF[i] <- max(df_k$knownEM.x[i],df_k$knownEM.y[i]) - min(df_k$knownEM.x[i],df_k$knownEM.y[i])
} else {
df_k$AF[i] <- 1 - max(df_k$knownEM.x[i],df_k$knownEM.y[i]) - min(df_k$knownEM.x[i],df_k$knownEM.y[i])
}
}
return(df_k %>% select(c(chromo, position, AF)))
}
# read in files
km <- read.table('ang.kisii_mz.out.mafs', header = T) %>%
filter(nInd >= 9)
kf <- read.table('ang.kisii_fm.out.mafs', header = T) %>%
filter(nInd >= 9)
pwd
getwd()
setwd('Fig3_ANGSD/')
=======
p
>>>>>>> Stashed changes
# read in files
km <- read.table('ang.kisii_mz.out.mafs', header = T)
kf <- read.table('ang.kisii_fm.out.mafs', header = T)
# haustorium loci of interest
km$host <- "maize"
kf$host <- "finger millet"
df <- rbind.data.frame(km, kf)
haus_1 <- subset(df, chromo == "StHeBC4_h_c11261_g0_i1")
p <- ggplot(haus_1, aes(x = position, y = knownEM, size = nInd)) +
geom_point(alpha = 0.6) +
facet_grid(.~host) + #, labeller = labeller(chromo = haus_names)) +
scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
scale_size_binned(range = c(0,3)) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
<<<<<<< Updated upstream
panel.grid.major.x = element_blank()) +
scale_colour_discrete(name = "Population") +
ylab("Allele Frequency Difference")
p
p <- ggplot(sl, aes(x = position, y = AF, col = pop)) +
geom_point(size = 0.1, alpha = 0.5) +
facet_wrap(chromo~., labeller = labeller(chromo = shtl_names)) +
ylim(c(0,1)) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) +
scale_colour_discrete(name = "Population") +
ylab("Allele Frequency Difference")
p
pdf('FigS2_ShHTL.pdf', width = 6, height = 5)
p
dev.off()
pdf('FigS2_ShHTL.pdf', width = 6, height = 4)
=======
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 7),
legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
p
p <- ggplot(haus_1, aes(x = position, y = knownEM, size = nInd, col = knownEM)) +
geom_point(alpha = 0.6) +
facet_grid(.~host) + #, labeller = labeller(chromo = haus_names)) +
scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
scale_size_binned(range = c(0,3)) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 7),
legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
p
p <- ggplot(haus_1, aes(x = position, y = knownEM, size = nInd, col = knownEM)) +
geom_point(alpha = 0.6) +
facet_grid(.~host) + #, labeller = labeller(chromo = haus_names)) +
#scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
scale_size_binned(range = c(0,3)) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 7),
legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
p
p <- ggplot(haus_1, aes(x = position, y = knownEM, size = nInd, col = nInd)) +
geom_point(alpha = 0.6) +
facet_grid(.~host) + #, labeller = labeller(chromo = haus_names)) +
#scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
scale_size_binned(range = c(0,3)) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 7),
legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
p
p <- ggplot(haus_1, aes(x = position, y = knownEM, col = nInd)) +
geom_point(alpha = 0.6) +
facet_grid(.~host) + #, labeller = labeller(chromo = haus_names)) +
#scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
#scale_size_binned(range = c(0,3)) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 7),
legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
p
p <- ggplot(haus_1, aes(x = position, y = knownEM, col = nInd)) +
geom_point(alpha = 0.6) +
facet_grid(host~.) + #, labeller = labeller(chromo = haus_names)) +
#scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
#scale_size_binned(range = c(0,3)) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 7),
legend.position = 'bottom',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
p
pdf("Fig3_chemo.pdf", width = 3, height = 2)
p
dev.off()
pdf("Fig3_chemo.pdf", width = 3, height = 3)
p
dev.off()
p <- ggplot(haus_1, aes(x = position, y = knownEM, col = nInd)) +
geom_point(alpha = 0.6) +
facet_grid(host~.) + #, labeller = labeller(chromo = haus_names)) +
#scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
#scale_size_binned(range = c(0,3)) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 7),
legend.position = 'bottomleft',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
p
p <- ggplot(haus_1, aes(x = position, y = knownEM, col = nInd)) +
geom_point(alpha = 0.6) +
facet_grid(host~.) + #, labeller = labeller(chromo = haus_names)) +
#scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
#scale_size_binned(range = c(0,3)) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 7),
legend.position = 'bottom_left',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
p
p <- ggplot(haus_1, aes(x = position, y = knownEM, col = nInd)) +
geom_point(alpha = 0.6) +
facet_grid(host~.) + #, labeller = labeller(chromo = haus_names)) +
#scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
#scale_size_binned(range = c(0,3)) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 7),
legend.position = 'left',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
p
p <- ggplot(haus_1, aes(x = position, y = knownEM, col = nInd)) +
geom_point(alpha = 0.6) +
facet_grid(host~.) + #, labeller = labeller(chromo = haus_names)) +
#scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
#scale_size_binned(range = c(0,3)) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 7),
legend.position = 'top',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
p
p <- ggplot(haus_1, aes(x = position, y = knownEM, col = nInd)) +
geom_point(alpha = 0.6) +
facet_grid(host~.) + #, labeller = labeller(chromo = haus_names)) +
#scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
#scale_size_binned(range = c(0,3)) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 7),
legend.position = 'right',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
>>>>>>> Stashed changes
p
p <- ggplot(haus_1, aes(x = position, y = knownEM, col = nInd)) +
geom_point(alpha = 0.6) +
facet_grid(host~.) + #, labeller = labeller(chromo = haus_names)) +
#scale_color_manual(name = "Host", values = paste0(jcolors(palette="pal5")[c(1,3,2)])) +
#scale_size_binned(range = c(0,3)) +
theme_bw() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
strip.text.y = element_text(size = 7),
legend.position = 'right',
axis.text.x = element_text(angle = 90, hjust = 1.25)) +
ylab("Minor Allele Frequency")
p
pdf("Fig3_chemo.pdf", width = 3, height = 3)
p
dev.off()
pdf("Fig3_chemo.pdf", width = 3, height = 2.5)
p
dev.off()
# libraries
library(tidyverse)
# read in files
tajd <- read.table('kisii.theta1x1kb.gz.pestPG', header = T)
head(tajd)
# read in files
tajd <- read.table('kisii.theta1x1kb.gz.pestPG', header = T, comment.char="")
head(tajd)
fst <- read.ftable('kf.km.fst_1x1', header = T)
fst <- read.table('kf.km.fst_1x1', header = T)
head(fst)
fst <- read.table('kf.km.fst_1x1', header = T, comment.char = "")
?read.table
fst <- read.table('kf.km.fst_1x1', header = T, comment.char = "", row.names = NULL)
head(fst)
fst <- read.table('kf.km.fst_1x1', header = T, row.names = NULL)
head(fst)
fst <- read.table('kf.km.fst_1x1', row.names = NULL, header = T)
head(fst)
colnames(fst) <- c('region','chr','midPos','Nsites','Fst')
head(fst)
chemo <- read.table('out.kisii.chemo.thetas.idx.pestPG', header = T, comment.char="")
tajd <- rbind.data.frame(tajd, chemo)
tail(tajd)
select(tajd, c(Chr, WinCenter, Tajima)) %>%
head()
select(tajd, c(Chr, WinCenter, Tajima)) %>%
mutate(id = Chr"_"WinCenter)
head()
mutate(id = paste0(c(Chr, WinCenter, sep="_")) %>%
)
select(tajd, c(Chr, WinCenter, Tajima)) %>%
mutate(id = paste0(c(Chr, WinCenter), sep="_")) %>%
head()
select(tajd, c(Chr, WinCenter, Tajima)) %>%
mutate(id =
paste0(c(Chr, WinCenter), sep="_"))
select(tajd, c(Chr, WinCenter, Tajima)) %>%
mutate(id =
paste0(c(tajd$Chr, tajd$WinCenter), sep="_"))
select(tajd, c(Chr, WinCenter, Tajima)) %>%
mutate(id =
paste0(c(tajd$Chr, tajd$WinCenter), sep="_"))
paste0(c(tajd$Chr, tajd$WinCenter), sep="_"))
paste0(c(tajd$Chr, tajd$WinCenter), sep="_"))
paste0(c(tajd$Chr, tajd$WinCenter), sep="_")
paste0(c(tajd$Chr, tajd$WinCenter), sep="_") %>% head()
paste(c(tajd$Chr, tajd$WinCenter), sep="_")
paste(c(tajd$Chr, tajd$WinCenter), sep="_") %>% head()
paste0(c(tajd$Chr, tajd$WinCenter), sep="_") %>% head()
paste0(tajd$Chr"_"tajd$WinCenter) %>% head()
paste(tajd$Chr"_"tajd$WinCenter) %>% head()
paste(c(tajd$Chr,"_",tajd$WinCenter) %>% head()
)
paste(c(tajd$Chr,"_",tajd$WinCenter)) %>% head()
paste(tajd$Chr,"_",tajd$WinCenter) %>% head()
paste0(tajd$Chr,"_",tajd$WinCenter) %>% head()
taj2 <- select(tajd, c(Chr, WinCenter, Tajima))
taj2 <- paste0(tajd$Chr,"_",tajd$WinCenter)
head(taj2)
taj2 <- select(tajd, c(Chr, WinCenter, Tajima))
taj2$id <- paste0(tajd$Chr,"_",tajd$WinCenter)
head(taj2)
head(fst)
colnames(fst) <- c('region','Chr','WinCenter','Nsites','Fst')
fst$id <- paste0(fst$Chr,"_",fst$WinCenter)
head(fst)
nrow(fst)
nrow(taj2)
hist(fst$Nsites)
head(fst)
head(taj2)
?left_join
left_join(taj2, fst, by = "id") %>% head()
left_join(taj2, fst, by = "id") %>% nrow()
nrow(taj2)
df <- left_join(taj2, fst, by = "id")
head(df)
df <- left_join(taj2, fst, by = "id")
tail(df)
summary(taj2)
summary(df)
df$Fst_class <- df$Fst
head(df)
df$Fst_class[-is.na(df$Fst)] <- 0
head(df)
df$Fst_class[exists(df$Fst)] <- 0
exists(df$Fst)
?exists
df$Fst_class[!is.na(df$Fst)] <- 0
df$Fst_class[is.na(df$Fst)] <- 1
head(df)
tail(df)
df <- left_join(taj2, fst, by = "id") %>%
select(c(id, Tajima, Fst, WinCenter.x))
head(df)
df$Fst_class <- df$Fst
df$Fst_class[!is.na(df$Fst)] <- 0
df$Fst_class[is.na(df$Fst)] <- 1
?sort
?arrange
df <- left_join(taj2, fst, by = "id") %>%
select(c(id, Tajima, Fst, WinCenter.x)) %>%
arrange(Fst)
head(df)
tail(df)
df$idx <- 1:nrow(df)
# plot
ggplot(df, aes(x = idx, y = Tajima, col = Fst)) +
geom_point() +
theme_bw()
# plot
ggplot(df, aes(x = idx, y = Tajima, col = Fst)) +
geom_point(alpha = 0.2, size = 0.2) +
theme_bw()
# plot
ggplot(df, aes(x = idx, y = Tajima, col = Fst)) +
geom_point(alpha = 0.1, size = 0.2) +
theme_bw() +
scale_color_viridis_b()
# plot
ggplot(df, aes(x = idx, y = Tajima, col = Fst)) +
geom_point(alpha = 0.1, size = 0.2) +
theme_bw() +
scale_color_viridis_c()
# plot
ggplot(df, aes(x = idx, y = Tajima, col = Fst)) +
geom_point(alpha = 0.1, size = 0.2) +
theme_bw() +
scale_color_viridis_b() +
xlab("Tajima's D") +
ylab("Index")
# plot
ggplot(df, aes(x = idx, y = Tajima, col = Fst)) +
geom_point(alpha = 0.1, size = 0.2) +
theme_bw() +
scale_color_viridis_c() +
xlab("Tajima's D") +
ylab("Index")
# plot
p <- ggplot(df, aes(x = idx, y = Tajima, col = Fst)) +
geom_point(alpha = 0.1, size = 0.2) +
theme_bw() +
scale_color_viridis_c() +
ylab("Tajima's D") +
xlab("Index")
head(df)
head(taj2)
head(fst)
df <- left_join(taj2, fst, by = "id") %>%
select(c(id, Tajima, Fst, WinCenter.x, Nsites)) %>%
arrange(Fst) %>%
filter(Nsites >=500)
df$idx <- 1:nrow(df)
# plot
p <- ggplot(df, aes(x = idx, y = Tajima, col = Fst)) +
geom_point(alpha = 0.1, size = 0.2) +
theme_bw() +
scale_color_viridis_c() +
ylab("Tajima's D") +
xlab("Index")
p
p + xlim(c(25000, 50000))
subset(df, Tajima ==0)
df <- left_join(taj2, fst, by = "id") %>%
select(c(id, Tajima, Fst, WinCenter.x, Nsites)) %>%
arrange(Fst) %>%
filter(Nsites >=500 | Tajima == 0)
df$idx <- 1:nrow(df)
# plot
p <- ggplot(df, aes(x = idx, y = Tajima, col = Fst)) +
geom_point(alpha = 0.1, size = 0.2) +
theme_bw() +
scale_color_viridis_c() +
ylab("Tajima's D") +
xlab("Index")
p
df <- left_join(taj2, fst, by = "id") %>%
select(c(id, Tajima, Fst, WinCenter.x, Nsites)) %>%
arrange(Fst) %>%
filter(Nsites >=500) %>%
filter(Tajima != 0)
df$idx <- 1:nrow(df)
# plot
p <- ggplot(df, aes(x = idx, y = Tajima, col = Fst)) +
geom_point(alpha = 0.1, size = 0.2) +
theme_bw() +
scale_color_viridis_c() +
ylab("Tajima's D") +
xlab("Index")
p
?scale_color_viridis_c
p
pdf("Fig3c_TD.pdf", width = 3, height = 1)
p
dev.off()
pdf("Fig3c_TD.pdf", width = 3, height = 1.5)
p
dev.off()
# plot
p <- ggplot(df, aes(x = idx, y = Tajima, col = Fst)) +
geom_point(alpha = 0.1, size = 0.2) +
theme_bw() +
scale_color_viridis_c() +
ylab("Tajima's D") +
xlab("Index") +
geom_rug(sides = 'a')
p
# plot
p <- ggplot(df, aes(x = idx, y = Tajima, col = Fst)) +
geom_point(alpha = 0.1, size = 0.2) +
theme_bw() +
scale_color_viridis_c() +
ylab("Tajima's D") +
xlab("Index") +
geom_rug(sides = 'l')
p
ggplot(df, aes(x = Tajima, y = Fst)) +
geom_point(alpha = 0.1, size = 0.2) +
theme_bw() +
scale_color_viridis_c() +
xlab("Tajima's D") +
ylab("Fst") +
geom_rug(sides = 'l')
?geom_hex
ggplot(df, aes(x = Tajima, y = Fst)) +
geom_hex() +
theme_bw() +
scale_color_viridis_c() +
xlab("Tajima's D") +
ylab("Fst")
ggplot(df, aes(x = Tajima, y = Fst)) +
geom_hex() +
theme_minimal() +
scale_color_viridis_c() +
xlab("Tajima's D") +
ylab("Fst")
ggplot(df, aes(x = Tajima, y = Fst)) +
geom_hex() +
theme_classic() +
scale_color_viridis_c() +
xlab("Tajima's D") +
ylab("Fst")
?geom_hex
ggplot(df, aes(x = Tajima, y = Fst)) +
geom_hex() +
theme_classic() +
scale_fill_viridis_c() +
xlab("Tajima's D") +
ylab("Fst")
ggplot(df, aes(x = Tajima, y = Fst)) +
geom_hex() +
theme_classic() +
scale_fill_viridis_c() +
xlab("Tajima's D") +
ylab("Fst") +
geom_rug()
ggplot(df, aes(x = Tajima, y = Fst)) +
geom_hex(bins = 1000) +
theme_classic() +
scale_fill_viridis_c() +
xlab("Tajima's D") +
ylab("Fst")
ggplot(df, aes(x = Tajima, y = Fst)) +
geom_hex(bins = 100) +
theme_classic() +
scale_fill_viridis_c() +
xlab("Tajima's D") +
ylab("Fst")
ggplot(df, aes(x = Tajima, y = Fst)) +
geom_hex(bins = 50) +
theme_classic() +
scale_fill_viridis_c() +
xlab("Tajima's D") +
ylab("Fst")
scale_fill_viridis_c() +
ggplot(df, aes(x = Tajima, y = Fst)) +
geom_hex(bins = 50) +
theme_classic() +
scale_fill_viridis_c() +
xlab("Tajima's D") +
ylab(expression('F'['ST']))
ggplot(df, aes(x = Tajima, y = Fst)) +
geom_hex(bins = 50) +
theme_classic() +
scale_fill_viridis_c() +
xlab("Tajima's D") +
ylab(expression('F'[ST]))
ggplot(df, aes(x = Tajima, y = Fst)) +
geom_hex(bins = 50) +
theme_classic() +
scale_fill_viridis_c() +
xlab("Tajima's D") +
ylab(expression(italic('F'[ST])))
pdf("Fig3c_TD.pdf", width = 3, height = 1.5)
p
dev.off()
pdf("Fig3c_TD.pdf", width = 1.5, height = 1.5)
p
dev.off()
p <- ggplot(df, aes(x = Tajima, y = Fst)) +
geom_hex(bins = 50) +
theme_classic() +
scale_fill_viridis_c() +
xlab("Tajima's D") +
ylab(expression(italic('F'[ST])))
pdf("Fig3c_TD.pdf", width = 1.5, height = 1.5)
p
dev.off()
pdf("Fig3c_TD.pdf", width = 3, height = 3)
p
dev.off()
p
pdf("Fig3c_TD.pdf", width = 3, height = 3)
p
dev.off()
dev.off()
dev.off()
pdf("Fig3c_TD.pdf", width = 3, height = 2)
p
dev.off()
dev.off()
p <- ggplot(df, aes(x = Tajima, y = Fst)) +
geom_hex(bins = 30) +
theme_classic() +
scale_fill_viridis_c() +
xlab("Tajima's D") +
ylab(expression(italic('F'[ST])))
p
pdf("Fig3c_TD.pdf", width = 3, height = 2)
p
dev.off()
dev.off()
<<<<<<< Updated upstream
head(sl)
subset(sl, AF > 0.5)
head(km)
subset(km, chromo == "KR013126.1", position ==457)
subset(km, chromo == "KR013126.1" && position ==457)
subset(km, chromo == "KR013126.1" & position ==457)
subset(kf, chromo == "KR013126.1" & position ==457)
=======
nrow(df)
subset(df, Fst > 0.45)
>>>>>>> Stashed changes
