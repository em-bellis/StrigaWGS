#setwd("/Users/ebellis/Documents/GitHub/StrigaWGS/")
library(tidyverse)
library(ape)
library(jcolors)
k31 <- read.table("k31.mash.out", header=F)
k31 <- k31 %>% select(1:3)
colnames(k31) <- c("S1","S2","dist")
meta <- read.csv('../Fig1/Striga_GPS.csv', header=T)
setwd("/Users/ebellis/Documents/GitHub/StrigaWGS/")
meta <- read.csv('../Fig1/Striga_GPS.csv', header=T)
meta <- read.csv('Fig1/Striga_GPS.csv', header=T)
meta <- read.csv('Fig1_mapxPCoA/Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% filter(SampleID %in% unique(k31$S1))
# function to run PCoA and return clean df
runPCoA <- function(part, meta) {
# filter metadata
if(part == "A") {
meta_sub <- meta
} else if (part == "B") {
meta_sub <- filter(meta, Site != "Kisii") %>%
filter(Site != "Homa Bay")
meta_subkh <- filter(meta,
SampleID =="SH130"| SampleID =="SH134"|
SampleID =="SH138"| SampleID =="SH139"|
SampleID =="SH146"| SampleID =="SH124"|
SampleID =="SH117"| SampleID =="SH113"|
SampleID =="SH111"|SampleID =="SH104")
meta_sub <- rbind(meta_sub, meta_subkh)
} else if (part == "C") {
meta_sub <- filter(meta, Site == "Kisii")
} else if (part == "D") {
meta_sub <- filter(meta, Site == "Homa Bay")
}
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
# create df of results
df <- cbind.data.frame("SampleID"=rownames(k31.pcoa$vectors),
"Axis1"=k31.pcoa$vectors[,1],
"Axis2"=k31.pcoa$vectors[,2])
# add metadata
#meta <- read.csv('Striga_GPS.csv', header=T)
#meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
tmp <- meta %>% select(SampleID, Site, Host)
df <- inner_join(tmp, df)
return(df)
}
meta <- read.csv('Fig1_mapxPCoA/Striga_GPS.csv', header=T)
meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
meta <- meta %>% filter(SampleID %in% unique(k31$S1))
# function to run PCoA and return clean df
runPCoA <- function(part, meta) {
# filter metadata
if(part == "A") {
meta_sub <- meta
} else if (part == "B") {
meta_sub <- filter(meta, Site != "Kisii") %>%
filter(Site != "Homa Bay")
meta_subkh <- filter(meta,
SampleID =="SH130"| SampleID =="SH134"|
SampleID =="SH138"| SampleID =="SH139"|
SampleID =="SH146"| SampleID =="SH124"|
SampleID =="SH117"| SampleID =="SH113"|
SampleID =="SH111"|SampleID =="SH104")
meta_sub <- rbind(meta_sub, meta_subkh)
} else if (part == "C") {
meta_sub <- filter(meta, Site == "Kisii")
} else if (part == "D") {
meta_sub <- filter(meta, Site == "Homa Bay")
}
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
# create df of results
df <- cbind.data.frame("SampleID"=rownames(k31.pcoa$vectors),
"Axis1"=k31.pcoa$vectors[,1],
"Axis2"=k31.pcoa$vectors[,2])
# add metadata
#meta <- read.csv('Striga_GPS.csv', header=T)
#meta$Site <- as.factor(str_replace(meta$Site, "2","") %>% str_trim())
tmp <- meta %>% select(SampleID, Site, Host)
df <- inner_join(tmp, df)
return(df)
}
# loop through each figure part to create final df
FigParts = c("A","B","C","D")
i = 2
df <- runPCoA(FigParts[i], meta)
df
k31.dist
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
meta_sub <- filter(meta, Site != "Kisii") %>%
filter(Site != "Homa Bay")
meta_subkh <- filter(meta,
SampleID =="SH130"| SampleID =="SH134"|
SampleID =="SH138"| SampleID =="SH139"|
SampleID =="SH146"| SampleID =="SH124"|
SampleID =="SH117"| SampleID =="SH113"|
SampleID =="SH111"|SampleID =="SH104")
meta_sub <- rbind(meta_sub, meta_subkh)
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.pcoa
meta_sub <- meta
meta
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.pcoa$vectors
k31.pcoa$trace
k31.pcoa$values
meta_sub <- filter(meta, Site == "Kisii")
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.pcoa$values
meta_sub <- filter(meta, Site == "Homa Bay")
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.pcoa$trace
k31.pcoa$values
meta_sub <- filter(meta, Site == "Homa Bay")
meta_sub
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.pcoa$values
meta_sub <- filter(meta, Site == "Kisii")
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.pcoa$values
k31.pcoa
meta_sub <- filter(meta, Site == "Homa Bay")
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt
k31
nrow(k31)
head(k31)
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31_flt
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.dist
k31.pcoa
k31.pcoa_hb <- k31.pcoa
meta_sub <- filter(meta, Site == "Kisii")
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.pcoa
cbind(k31.pcoa$values$Eigenvalues, k31.pcoa_hb$values$Eigenvalues)
cbind(k31.pcoa$values$Broken_stick, k31.pcoa_hb$values$Broken_stick)
k31.pcoa$values
cbind(k31.pcoa$values$Relative_eig, k31.pcoa_hb$values$Relative_eig)
meta_sub <- filter(meta, Site != "Kisii") %>%
filter(Site != "Homa Bay")
meta_subkh <- filter(meta,
SampleID =="SH130"| SampleID =="SH134"|
SampleID =="SH138"| SampleID =="SH139"|
SampleID =="SH146"| SampleID =="SH124"|
SampleID =="SH117"| SampleID =="SH113"|
SampleID =="SH111"|SampleID =="SH104")
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.pcoa$values$Relative_eig
meta_sub <- meta
# create distance matrix
k31_flt <- k31 %>% filter(S1 %in% meta_sub$SampleID) %>%
filter(S2 %in% meta_sub$SampleID)
k31_flt <- as.matrix(k31_flt %>%
pivot_wider(names_from = S2,
values_from = dist) %>%
column_to_rownames(var="S1"))
k31.dist <- as.dist(k31_flt)
# run PCoA
k31.pcoa <- ape::pcoa(k31.dist, correction="none", rn=NULL)
k31.pcoa$values$Relative_eig
k31.pcoa$values
library(tidyverse)
library(jcolors)
# function to get diff in allele frequency
getAF <- function(pop1, pop2) {
df_k <- inner_join(pop1, pop2, by = c("chromo", "position"))
df_k$AF <- NULL
for (i in 1:nrow(df_k)) {
if (df_k$major.x[i] == df_k$major.y[i]){
df_k$AF[i] <- max(df_k$knownEM.x[i],df_k$knownEM.y[i]) - min(df_k$knownEM.x[i],df_k$knownEM.y[i])
} else {
df_k$AF[i] <- 1 - max(df_k$knownEM.x[i],df_k$knownEM.y[i]) - min(df_k$knownEM.x[i],df_k$knownEM.y[i])
}
}
return(df_k %>% select(c(chromo, position, AF)))
}
# read in files
km <- read.table('ang.kisii_mz.out.mafs', header = T) %>%
filter(nInd >= 9)
kf <- read.table('ang.kisii_fm.out.mafs', header = T) %>%
filter(nInd >= 9)
pwd
getwd()
setwd('Fig3_ANGSD/')
# read in files
km <- read.table('ang.kisii_mz.out.mafs', header = T) %>%
filter(nInd >= 9)
kf <- read.table('ang.kisii_fm.out.mafs', header = T) %>%
filter(nInd >= 9)
hm <- read.table('ang.homa_mz.out.mafs', header = T) %>%
filter(nInd >= 9)
hs <- read.table('ang.homa_sg.out.mafs', header = T) %>%
filter(nInd >= 9)
df_h <- getAF(hs, hm)
df_h$pop <- 'Homa Bay'
df_k <- getAF(kf, km)
df_k$pop <- 'Kisii'
df <- rbind.data.frame(df_k, df_h)
sl <- subset(df, chromo != "StHeBC4_h_c11261_g0_i1" &
chromo != "StHeBC4_p_c12587_g2_i1" &
chromo != "StHeBC4_u_c12903_g27039_i4")
pm <- subset(df, chromo == "StHeBC4_u_c12903_g27039_i4")
# change labels for chromo for ShHTLs to annotations
shtl_names <- c(
"KR013131.1" = "ShHTL11",
"KR013130.1" = "ShHTL10",
"KR013129.1" = "ShHTL9",
"KR013128.1" = "ShHTL8",
"KR013127.1" = "ShHTL7",
"KR013126.1" = "ShHTL6",
"KR013125.1" = "ShHTL5",
"KR013124.1" = "ShHTL4",
"KR013123.1" = "ShHTL3",
"KR013122.1" = "ShHTL2",
"KR013121.1" = "ShHTL1"
)
p <- ggplot(sl, aes(x = position, y = AF, col = pop)) +
geom_point(size = 0.1, alpha = 0.5) +
facet_grid(chromo~., labeller = labeller(chromo = shtl_names)) +
ylim(c(0,1)) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) +
scale_colour_discrete(name = "Population") +
ylab("Allele Frequency Difference")
p
p <- ggplot(sl, aes(x = position, y = AF, col = pop)) +
geom_point(size = 0.1, alpha = 0.5) +
facet_wrap(chromo~., labeller = labeller(chromo = shtl_names)) +
ylim(c(0,1)) +
theme_minimal() +
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank()) +
scale_colour_discrete(name = "Population") +
ylab("Allele Frequency Difference")
p
pdf('FigS2_ShHTL.pdf', width = 6, height = 5)
p
dev.off()
pdf('FigS2_ShHTL.pdf', width = 6, height = 4)
p
dev.off()
head(sl)
subset(sl, AF > 0.5)
head(km)
subset(km, chromo == "KR013126.1", position ==457)
subset(km, chromo == "KR013126.1" && position ==457)
subset(km, chromo == "KR013126.1" & position ==457)
subset(kf, chromo == "KR013126.1" & position ==457)
